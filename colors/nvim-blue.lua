vim.cmd.highlight("clear")
vim.g.color_name = "nvim-blue"

vim.api.nvim_set_hl(0, "htmlBoldUnderline", {})
vim.api.nvim_set_hl(0, "htmlBoldItalic", {})
vim.api.nvim_set_hl(0, "htmlBoldUnderlineItalic", {})
vim.api.nvim_set_hl(0, "htmlBoldItalicUnderline", { link = "htmlBoldUnderlineItalic" })
vim.api.nvim_set_hl(0, "htmlUnderlineBold", { link = "htmlBoldUnderline" })
vim.api.nvim_set_hl(0, "htmlUnderlineItalic", {})
vim.api.nvim_set_hl(0, "htmlUnderline", {})
vim.api.nvim_set_hl(0, "htmlUnderlineBoldItalic", { link = "htmlBoldUnderlineItalic" })
vim.api.nvim_set_hl(0, "htmlUnderlineItalicBold", { link = "htmlBoldUnderlineItalic" })
vim.api.nvim_set_hl(0, "htmlItalicBold", { link = "htmlBoldItalic" })
vim.api.nvim_set_hl(0, "htmlItalicUnderline", { link = "htmlUnderlineItalic" })
vim.api.nvim_set_hl(0, "htmlItalicBoldUnderline", { link = "htmlBoldUnderlineItalic" })
vim.api.nvim_set_hl(0, "htmlItalicUnderlineBold", { link = "htmlBoldUnderlineItalic" })
vim.api.nvim_set_hl(0, "htmlLeadingSpace", { link = "None" })
vim.api.nvim_set_hl(0, "WarningMsg", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "htmlTitle", { link = "Title" })
vim.api.nvim_set_hl(0, "htmlHead", { link = "PreProc" })
vim.api.nvim_set_hl(0, "javaScriptCommentTodo", { link = "Todo" })
vim.api.nvim_set_hl(0, "javaScriptLineComment", { link = "Comment" })
vim.api.nvim_set_hl(0, "javaScriptComment", { link = "Comment" })
vim.api.nvim_set_hl(0, "javaScriptSpecial", { link = "Special" })
vim.api.nvim_set_hl(0, "javaScriptStringD", { link = "String" })
vim.api.nvim_set_hl(0, "javaScriptStringS", { link = "String" })
vim.api.nvim_set_hl(0, "javaScriptEmbed", { link = "Special" })
vim.api.nvim_set_hl(0, "javaScriptStringT", { link = "String" })
vim.api.nvim_set_hl(0, "javaScriptSpecialCharacter", { link = "javaScriptSpecial" })
vim.api.nvim_set_hl(0, "javaScriptNumber", { link = "Number" })
vim.api.nvim_set_hl(0, "javaScriptRegexpString", { link = "String" })
vim.api.nvim_set_hl(0, "javaScriptConditional", { link = "Conditional" })
vim.api.nvim_set_hl(0, "javaScriptRepeat", { link = "Repeat" })
vim.api.nvim_set_hl(0, "javaScriptBranch", { link = "Conditional" })
vim.api.nvim_set_hl(0, "javaScriptOperator", { link = "Operator" })
vim.api.nvim_set_hl(0, "javaScriptType", { link = "Type" })
vim.api.nvim_set_hl(0, "javaScriptStatement", { link = "Statement" })
vim.api.nvim_set_hl(0, "javaScriptBoolean", { link = "Boolean" })
vim.api.nvim_set_hl(0, "javaScriptNull", { link = "Keyword" })
vim.api.nvim_set_hl(0, "javaScriptIdentifier", { link = "Identifier" })
vim.api.nvim_set_hl(0, "javaScriptLabel", { link = "Label" })
vim.api.nvim_set_hl(0, "javaScriptException", { link = "Exception" })
vim.api.nvim_set_hl(0, "javaScriptMessage", { link = "Keyword" })
vim.api.nvim_set_hl(0, "javaScriptGlobal", { link = "Keyword" })
vim.api.nvim_set_hl(0, "javaScriptMember", { link = "Keyword" })
vim.api.nvim_set_hl(0, "javaScriptDeprecated", { link = "Exception" })
vim.api.nvim_set_hl(0, "javaScriptReserved", { link = "Keyword" })
vim.api.nvim_set_hl(0, "javaScriptModifier", { link = "StorageClass" })
vim.api.nvim_set_hl(0, "javaScriptFunction", { link = "Keyword" })
vim.api.nvim_set_hl(0, "javaScriptBraces", { link = "Function" })
vim.api.nvim_set_hl(0, "javaScriptCharacter", { link = "Character" })
vim.api.nvim_set_hl(0, "javaScriptError", { link = "Error" })
vim.api.nvim_set_hl(0, "javaScrParenError", { link = "javaScriptError" })
vim.api.nvim_set_hl(0, "javaScriptDebug", { link = "Debug" })
vim.api.nvim_set_hl(0, "javaScriptConstant", { link = "Label" })
vim.api.nvim_set_hl(0, "htmlCssStyleComment", { link = "Comment" })
vim.api.nvim_set_hl(0, "htmlScriptTag", { link = "htmlTag" })
vim.api.nvim_set_hl(0, "htmlEventSQ", { link = "htmlEvent" })
vim.api.nvim_set_hl(0, "htmlEventDQ", { link = "htmlEvent" })
vim.api.nvim_set_hl(0, "vbConditional", { link = "Conditional" })
vim.api.nvim_set_hl(0, "vbOperator", { link = "Operator" })
vim.api.nvim_set_hl(0, "vbBoolean", { link = "Boolean" })
vim.api.nvim_set_hl(0, "vbConst", { link = "Constant" })
vim.api.nvim_set_hl(0, "vbRepeat", { link = "Repeat" })
vim.api.nvim_set_hl(0, "vbEvents", { link = "Special" })
vim.api.nvim_set_hl(0, "vbFunction", { link = "Identifier" })
vim.api.nvim_set_hl(0, "vbMethods", { link = "PreProc" })
vim.api.nvim_set_hl(0, "vbStatement", { link = "Statement" })
vim.api.nvim_set_hl(0, "vbKeyword", { link = "Statement" })
vim.api.nvim_set_hl(0, "vbTodo", { link = "Todo" })
vim.api.nvim_set_hl(0, "vbTypes", { link = "Type" })
vim.api.nvim_set_hl(0, "vbDefine", { link = "Constant" })
vim.api.nvim_set_hl(0, "vbNumber", { link = "Number" })
vim.api.nvim_set_hl(0, "vbFloat", { link = "Float" })
vim.api.nvim_set_hl(0, "vbString", { link = "String" })
vim.api.nvim_set_hl(0, "vbComment", { link = "Comment" })
vim.api.nvim_set_hl(0, "vbLineLabel", { link = "Comment" })
vim.api.nvim_set_hl(0, "vbLineNumber", { link = "Comment" })
vim.api.nvim_set_hl(0, "vbTypeSpecifier", { link = "Type" })
vim.api.nvim_set_hl(0, "vbPreProc", { link = "PreProc" })
vim.api.nvim_set_hl(0, "vbError", { link = "Error" })
vim.api.nvim_set_hl(0, "vbIdentifier", { link = "Identifier" })
vim.api.nvim_set_hl(0, "cssTagName", { link = "Statement" })
vim.api.nvim_set_hl(0, "cssSelectorOp", { link = "Special" })
vim.api.nvim_set_hl(0, "cssSelectorOp2", { link = "Special" })
vim.api.nvim_set_hl(0, "cssUnicodeEscape", { link = "Special" })
vim.api.nvim_set_hl(0, "cssStringQ", { link = "String" })
vim.api.nvim_set_hl(0, "cssStringQQ", { link = "String" })
vim.api.nvim_set_hl(0, "cssAttributeSelector", { link = "String" })
vim.api.nvim_set_hl(0, "cssClassNameDot", { link = "Function" })
vim.api.nvim_set_hl(0, "cssClassName", { link = "Function" })
vim.api.nvim_set_hl(0, "cssIdentifier", { link = "Function" })
vim.api.nvim_set_hl(0, "cssUnitDecorators", { link = "Number" })
vim.api.nvim_set_hl(0, "cssValueInteger", { link = "Number" })
vim.api.nvim_set_hl(0, "cssValueNumber", { link = "Number" })
vim.api.nvim_set_hl(0, "cssValueLength", { link = "Number" })
vim.api.nvim_set_hl(0, "cssValueAngle", { link = "Number" })
vim.api.nvim_set_hl(0, "cssValueTime", { link = "Number" })
vim.api.nvim_set_hl(0, "cssValueFrequency", { link = "Number" })
vim.api.nvim_set_hl(0, "cssColor", { link = "Constant" })
vim.api.nvim_set_hl(0, "cssImportant", { link = "Special" })
vim.api.nvim_set_hl(0, "cssCustomProp", { link = "Special" })
vim.api.nvim_set_hl(0, "cssFunctionName", { link = "Function" })
vim.api.nvim_set_hl(0, "cssURL", { link = "String" })
vim.api.nvim_set_hl(0, "cssFunction", { link = "Constant" })
vim.api.nvim_set_hl(0, "cssFunctionComma", { link = "Function" })
vim.api.nvim_set_hl(0, "cssGradientAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssAttr", { link = "Constant" })
vim.api.nvim_set_hl(0, "cssCommonAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssAnimationProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssProp", { link = "StorageClass" })
vim.api.nvim_set_hl(0, "cssAnimationAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssBackgroundProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssBackgroundAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssBorderProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssBorderAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssBoxProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssBoxAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssCascadeProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssCascadeAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssColorProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssDimensionProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssFlexibleBoxProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssFlexibleBoxAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "vimAugroupBang", { link = "vimBang" })
vim.api.nvim_set_hl(0, "vimAugroupError", { link = "vimError" })
vim.api.nvim_set_hl(0, "vim9Comment", { link = "Comment" })
vim.api.nvim_set_hl(0, "vimParenSep", { link = "Delimiter" })
vim.api.nvim_set_hl(0, "vimSep", { link = "Delimiter" })
vim.api.nvim_set_hl(0, "vimOperError", { link = "Error" })
vim.api.nvim_set_hl(0, "vimOperContinue", { link = "vimContinue" })
vim.api.nvim_set_hl(0, "vimOperContinueComment", { link = "vimContinueComment" })
vim.api.nvim_set_hl(0, "vimContinueComment", { link = "vimComment" })
vim.api.nvim_set_hl(0, "vimLambdaOperator", { link = "vimOper" })
vim.api.nvim_set_hl(0, "vimFuncParam", { link = "vimVar" })
vim.api.nvim_set_hl(0, "vim9LambdaOperatorComment", { link = "vim9Comment" })
vim.api.nvim_set_hl(0, "vim9LambdaOperator", { link = "vimOper" })
vim.api.nvim_set_hl(0, "vim9LambdaParamsParen", { link = "vimParenSep" })
vim.api.nvim_set_hl(0, "vimDefParam", { link = "vimVar" })
vim.api.nvim_set_hl(0, "vimFuncBang", { link = "vimBang" })
vim.api.nvim_set_hl(0, "vimFunctionError", { link = "vimError" })
vim.api.nvim_set_hl(0, "vimFuncKey", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimFuncScope", { link = "vimVar" })
vim.api.nvim_set_hl(0, "vimFuncSID", { link = "vimNotation" })
vim.api.nvim_set_hl(0, "vimDefKey", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimLetHereDoc", { link = "vimString" })
vim.api.nvim_set_hl(0, "vimInsert", { link = "vimString" })
vim.api.nvim_set_hl(0, "vimSearch", { link = "vimString" })
vim.api.nvim_set_hl(0, "vim9LineComment", { link = "vimComment" })
vim.api.nvim_set_hl(0, "vim9Search", { link = "vimString" })
vim.api.nvim_set_hl(0, "vimFuncComment", { link = "vimComment" })
vim.api.nvim_set_hl(0, "vimDefComment", { link = "vim9Comment" })
vim.api.nvim_set_hl(0, "vimFuncMod", { link = "Special" })
vim.api.nvim_set_hl(0, "vim9CommentError", { link = "vimError" })
vim.api.nvim_set_hl(0, "vimCommentError", { link = "vimError" })
vim.api.nvim_set_hl(0, "vimFuncParamEquals", { link = "vimOper" })
vim.api.nvim_set_hl(0, "vimType", { link = "Type" })
vim.api.nvim_set_hl(0, "vim9ConstructorDefParam", { link = "vimVar" })
vim.api.nvim_set_hl(0, "vim9MethodDef", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vim9Extends", { link = "Keyword" })
vim.api.nvim_set_hl(0, "vim9Implements", { link = "Keyword" })
vim.api.nvim_set_hl(0, "vim9AbstractDef", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vim9TypeAliasError", { link = "vimError" })
vim.api.nvim_set_hl(0, "vim9TypeEquals", { link = "vimOper" })
vim.api.nvim_set_hl(0, "vimKeymapTailComment", { link = "vimComment" })
vim.api.nvim_set_hl(0, "vimCommentString", { link = "vimString" })
vim.api.nvim_set_hl(0, "vim9CommentTitle", { link = "PreProc" })
vim.api.nvim_set_hl(0, "vimCommentTitle", { link = "PreProc" })
vim.api.nvim_set_hl(0, "vimKeymapLineComment", { link = "vimComment" })
vim.api.nvim_set_hl(0, "vimSpecFileMod", { link = "vimSpecFile" })
vim.api.nvim_set_hl(0, "vimUserCmdKey", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimUserCmdAttr", { link = "Special" })
vim.api.nvim_set_hl(0, "vimUserCmdAttrError", { link = "Error" })
vim.api.nvim_set_hl(0, "vimUserCmdAttrKey", { link = "vimUserCmdAttr" })
vim.api.nvim_set_hl(0, "vimUserCmdAttrAddr", { link = "vimSpecial" })
vim.api.nvim_set_hl(0, "vimSpecial", { link = "Type" })
vim.api.nvim_set_hl(0, "vimUserCmdAttrCmplt", { link = "vimSpecial" })
vim.api.nvim_set_hl(0, "vimUserCmdError", { link = "Error" })
vim.api.nvim_set_hl(0, "vimUserCmdAttrNargs", { link = "vimSpecial" })
vim.api.nvim_set_hl(0, "vimUserCmdAttrRange", { link = "vimSpecial" })
vim.api.nvim_set_hl(0, "vimDelcommandAttr", { link = "vimUserCmdAttr" })
vim.api.nvim_set_hl(0, "vimPatSepErr", { link = "vimError" })
vim.api.nvim_set_hl(0, "vimPatSep", { link = "SpecialChar" })
vim.api.nvim_set_hl(0, "vimPatSepZ", { link = "vimPatSep" })
vim.api.nvim_set_hl(0, "vimPatSepZone", { link = "vimString" })
vim.api.nvim_set_hl(0, "vimPatSepR", { link = "vimPatSep" })
vim.api.nvim_set_hl(0, "vimNotPatSep", { link = "vimString" })
vim.api.nvim_set_hl(0, "vimEscape", { link = "Special" })
vim.api.nvim_set_hl(0, "vimStringEnd", { link = "vimString" })
vim.api.nvim_set_hl(0, "vimQuoteEscape", { link = "vimEscape" })
vim.api.nvim_set_hl(0, "vimStringInterpolationBrace", { link = "vimEscape" })
vim.api.nvim_set_hl(0, "vimSubstTwoBS", { link = "vimString" })
vim.api.nvim_set_hl(0, "vimSubstSubstr", { link = "SpecialChar" })
vim.api.nvim_set_hl(0, "vimSubstDelim", { link = "Delimiter" })
vim.api.nvim_set_hl(0, "vimSubstFlagErr", { link = "vimError" })
vim.api.nvim_set_hl(0, "vimCollClassErr", { link = "vimError" })
vim.api.nvim_set_hl(0, "vimSubstFlags", { link = "Special" })
vim.api.nvim_set_hl(0, "vimMarkNumber", { link = "vimNumber" })
vim.api.nvim_set_hl(0, "vimPlainMark", { link = "vimMark" })
vim.api.nvim_set_hl(0, "vimPlainRegister", { link = "vimRegister" })
vim.api.nvim_set_hl(0, "vimSetBang", { link = "vimBang" })
vim.api.nvim_set_hl(0, "vimSetAll", { link = "vimOption" })
vim.api.nvim_set_hl(0, "vimSetTermcap", { link = "vimOption" })
vim.api.nvim_set_hl(0, "vimSetSep", { link = "vimSep" })
vim.api.nvim_set_hl(0, "vimSetString", { link = "vimString" })
vim.api.nvim_set_hl(0, "vimUnletBang", { link = "vimBang" })
vim.api.nvim_set_hl(0, "vimLetHereDocStart", { link = "Special" })
vim.api.nvim_set_hl(0, "vimLetHereDocStop", { link = "Special" })
vim.api.nvim_set_hl(0, "vim9Variable", { link = "vimVar" })
vim.api.nvim_set_hl(0, "vimLockvarBang", { link = "vimBang" })
vim.api.nvim_set_hl(0, "vimLockvarDepth", { link = "vimNumber" })
vim.api.nvim_set_hl(0, "vim9ForInComment", { link = "vim9Comment" })
vim.api.nvim_set_hl(0, "vimForInContinue", { link = "vimContinue" })
vim.api.nvim_set_hl(0, "vimForInContinueComment", { link = "vimContinueComment" })
vim.api.nvim_set_hl(0, "vimMapMod", { link = "vimBracket" })
vim.api.nvim_set_hl(0, "vimBracket", { link = "Delimiter" })
vim.api.nvim_set_hl(0, "vimAutoCmdBang", { link = "vimBang" })
vim.api.nvim_set_hl(0, "vimAutoEvent", { link = "Type" })
vim.api.nvim_set_hl(0, "nvimAutoEvent", { link = "vimAutoEvent" })
vim.api.nvim_set_hl(0, "vimAutoCmdMod", { link = "Special" })
vim.api.nvim_set_hl(0, "vimEcho", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimEchohlNone", { link = "vimGroup" })
vim.api.nvim_set_hl(0, "vimEchohl", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimMapBang", { link = "vimBang" })
vim.api.nvim_set_hl(0, "vimMapLeader", { link = "vimBracket" })
vim.api.nvim_set_hl(0, "vimMapModKey", { link = "vimFuncSID" })
vim.api.nvim_set_hl(0, "vimMapModErr", { link = "vimError" })
vim.api.nvim_set_hl(0, "vimMapLeaderKey", { link = "vimNotation" })
vim.api.nvim_set_hl(0, "vimMenuBang", { link = "vimBang" })
vim.api.nvim_set_hl(0, "vimMenuMod", { link = "vimMapMod" })
vim.api.nvim_set_hl(0, "vimMenuName", { link = "PreProc" })
vim.api.nvim_set_hl(0, "vimMenuPriority", { link = "Number" })
vim.api.nvim_set_hl(0, "vimMenuStatus", { link = "Special" })
vim.api.nvim_set_hl(0, "vimMenuNotation", { link = "vimNotation" })
vim.api.nvim_set_hl(0, "vimMenuClear", { link = "Special" })
vim.api.nvim_set_hl(0, "vimMenutranslateComment", { link = "vimComment" })
vim.api.nvim_set_hl(0, "vimFuncEcho", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimFuncName", { link = "Function" })
vim.api.nvim_set_hl(0, "vimUserFunc", { link = "Normal" })
vim.api.nvim_set_hl(0, "vim9MethodName", { link = "vimFuncName" })
vim.api.nvim_set_hl(0, "vimCompilerSet", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimSynMenuPath", { link = "vimMenuName" })
vim.api.nvim_set_hl(0, "vimSynMenu", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimElseIfErr", { link = "Error" })
vim.api.nvim_set_hl(0, "vimBufnrWarn", { link = "vimWarn" })
vim.api.nvim_set_hl(0, "vimWarn", { link = "WarningMsg" })
vim.api.nvim_set_hl(0, "vimMatchGroup", { link = "vimGroup" })
vim.api.nvim_set_hl(0, "vimMatchNone", { link = "vimGroup" })
vim.api.nvim_set_hl(0, "vimSleepBang", { link = "vimBang" })
vim.api.nvim_set_hl(0, "vimSleepArg", { link = "Constant" })
vim.api.nvim_set_hl(0, "vimGroupSpecial", { link = "Special" })
vim.api.nvim_set_hl(0, "vimSynError", { link = "Error" })
vim.api.nvim_set_hl(0, "vimSynContains", { link = "vimSynOption" })
vim.api.nvim_set_hl(0, "vimSynOption", { link = "Special" })
vim.api.nvim_set_hl(0, "vimSynKeyContainedin", { link = "vimSynContains" })
vim.api.nvim_set_hl(0, "vimSynNextgroup", { link = "vimSynOption" })
vim.api.nvim_set_hl(0, "vimSynCcharValue", { link = "Character" })
vim.api.nvim_set_hl(0, "vimSynCchar", { link = "vimSynOption" })
vim.api.nvim_set_hl(0, "vimSynCase", { link = "Type" })
vim.api.nvim_set_hl(0, "vimSynCaseError", { link = "vimError" })
vim.api.nvim_set_hl(0, "vimGroupName", { link = "vimGroup" })
vim.api.nvim_set_hl(0, "vimGroupAdd", { link = "vimSynOption" })
vim.api.nvim_set_hl(0, "vimGroupRem", { link = "vimSynOption" })
vim.api.nvim_set_hl(0, "vimSynFoldMethod", { link = "Type" })
vim.api.nvim_set_hl(0, "vimSynFoldMethodError", { link = "vimError" })
vim.api.nvim_set_hl(0, "vimIskSep", { link = "Delimiter" })
vim.api.nvim_set_hl(0, "vimSynKeyOpt", { link = "vimSynOption" })
vim.api.nvim_set_hl(0, "vimSynMtchOpt", { link = "vimSynOption" })
vim.api.nvim_set_hl(0, "vimSynRegPat", { link = "vimString" })
vim.api.nvim_set_hl(0, "vimMtchComment", { link = "vimComment" })
vim.api.nvim_set_hl(0, "vimSynPatRange", { link = "vimString" })
vim.api.nvim_set_hl(0, "vimSynNotPatRange", { link = "vimSynRegPat" })
vim.api.nvim_set_hl(0, "vimSynRegOpt", { link = "vimSynOption" })
vim.api.nvim_set_hl(0, "vimSynReg", { link = "Type" })
vim.api.nvim_set_hl(0, "vimSynMtchGrp", { link = "vimSynOption" })
vim.api.nvim_set_hl(0, "vimSyncC", { link = "Type" })
vim.api.nvim_set_hl(0, "vimSyncError", { link = "Error" })
vim.api.nvim_set_hl(0, "vimSyncGroupName", { link = "vimGroupName" })
vim.api.nvim_set_hl(0, "vimSyncKey", { link = "Type" })
vim.api.nvim_set_hl(0, "vimSyncGroup", { link = "vimGroupName" })
vim.api.nvim_set_hl(0, "vimSyncNone", { link = "Type" })
vim.api.nvim_set_hl(0, "vimHiClear", { link = "Type" })
vim.api.nvim_set_hl(0, "vimHiCtermError", { link = "vimError" })
vim.api.nvim_set_hl(0, "vimHiBang", { link = "vimBang" })
vim.api.nvim_set_hl(0, "vimHiGroup", { link = "vimGroupName" })
vim.api.nvim_set_hl(0, "vimHiAttrib", { link = "PreProc" })
vim.api.nvim_set_hl(0, "vimFgBgAttrib", { link = "vimHiAttrib" })
vim.api.nvim_set_hl(0, "vimHiAttribList", { link = "vimError" })
vim.api.nvim_set_hl(0, "vimHiCtermColor", { link = "Constant" })
vim.api.nvim_set_hl(0, "vimHiGuiRgb", { link = "vimNumber" })
vim.api.nvim_set_hl(0, "vimHiBlend", { link = "vimHiTerm" })
vim.api.nvim_set_hl(0, "vimHiTerm", { link = "Type" })
vim.api.nvim_set_hl(0, "vimHiCTerm", { link = "vimHiTerm" })
vim.api.nvim_set_hl(0, "vimHiStartStop", { link = "vimHiTerm" })
vim.api.nvim_set_hl(0, "vimHiCtermFgBg", { link = "vimHiTerm" })
vim.api.nvim_set_hl(0, "vimHiCtermul", { link = "vimHiTerm" })
vim.api.nvim_set_hl(0, "vimHiCtermfont", { link = "vimHiTerm" })
vim.api.nvim_set_hl(0, "vimHiGui", { link = "vimHiTerm" })
vim.api.nvim_set_hl(0, "vimHiGuiFont", { link = "vimHiTerm" })
vim.api.nvim_set_hl(0, "vimHiGuiFgBg", { link = "vimHiTerm" })
vim.api.nvim_set_hl(0, "vimHiKeyError", { link = "vimError" })
vim.api.nvim_set_hl(0, "vimHiNmbr", { link = "Number" })
vim.api.nvim_set_hl(0, "vimShebangError", { link = "vimError" })
vim.api.nvim_set_hl(0, "vimShebang", { link = "PreProc" })
vim.api.nvim_set_hl(0, "vim9ContinueComment", { link = "vimContinueComment" })
vim.api.nvim_set_hl(0, "vimSearchDelim", { link = "Delimiter" })
vim.api.nvim_set_hl(0, "vim9SearchDelim", { link = "Delimiter" })
vim.api.nvim_set_hl(0, "vim9Vim9ScriptArg", { link = "Special" })
vim.api.nvim_set_hl(0, "luaMetaMethod", { link = "Function" })
vim.api.nvim_set_hl(0, "luaParenError", { link = "Error" })
vim.api.nvim_set_hl(0, "luaError", { link = "Error" })
vim.api.nvim_set_hl(0, "luaFunction", { link = "Function" })
vim.api.nvim_set_hl(0, "luaCondElse", { link = "Conditional" })
vim.api.nvim_set_hl(0, "luaCond", { link = "Conditional" })
vim.api.nvim_set_hl(0, "luaStatement", { link = "Statement" })
vim.api.nvim_set_hl(0, "luaRepeat", { link = "Repeat" })
vim.api.nvim_set_hl(0, "luaFor", { link = "Repeat" })
vim.api.nvim_set_hl(0, "luaLabel", { link = "Label" })
vim.api.nvim_set_hl(0, "luaOperator", { link = "Operator" })
vim.api.nvim_set_hl(0, "luaSymbolOperator", { link = "luaOperator" })
vim.api.nvim_set_hl(0, "luaTodo", { link = "Todo" })
vim.api.nvim_set_hl(0, "luaComment", { link = "Comment" })
vim.api.nvim_set_hl(0, "luaCommentDelimiter", { link = "luaComment" })
vim.api.nvim_set_hl(0, "luaConstant", { link = "Constant" })
vim.api.nvim_set_hl(0, "luaSpecial", { link = "SpecialChar" })
vim.api.nvim_set_hl(0, "luaString2", { link = "String" })
vim.api.nvim_set_hl(0, "luaStringDelimiter", { link = "luaString" })
vim.api.nvim_set_hl(0, "luaString", { link = "String" })
vim.api.nvim_set_hl(0, "luaNumber", { link = "Number" })
vim.api.nvim_set_hl(0, "luaTable", { link = "Structure" })
vim.api.nvim_set_hl(0, "luaFunc", { link = "Identifier" })
vim.api.nvim_set_hl(0, "vimScriptDelim", { link = "Comment" })
vim.api.nvim_set_hl(0, "vimEmbedError", { link = "Normal" })
vim.api.nvim_set_hl(0, "vimCondHL", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vim9KeymapLineComment", { link = "vimKeymapLineComment" })
vim.api.nvim_set_hl(0, "vimPattern", { link = "Type" })
vim.api.nvim_set_hl(0, "vimStringCont", { link = "vimString" })
vim.api.nvim_set_hl(0, "vim9MethodNameError", { link = "vimFunctionError" })
vim.api.nvim_set_hl(0, "vim9Public", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vim9Static", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vim9Vim9Script", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "TSFuncMacro", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "TSInclude", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "TSKeyword", { fg = "#C678DD" })
vim.api.nvim_set_hl(0, "TSKeywordFunction", { fg = "#C678DD" })
vim.api.nvim_set_hl(0, "TSKeywordOperator", { fg = "#C678DD" })
vim.api.nvim_set_hl(0, "TSLabel", { fg = "#E5C07B" })
vim.api.nvim_set_hl(0, "TSMethod", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "TSNamespace", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "TSNone", { fg = "#ABB2BF" })
vim.api.nvim_set_hl(0, "TSNumber", { fg = "#D19A66" })
vim.api.nvim_set_hl(0, "TSOperator", { fg = "#ABB2BF" })
vim.api.nvim_set_hl(0, "TSParameter", { fg = "#ABB2BF" })
vim.api.nvim_set_hl(0, "TSParameterReference", { fg = "#ABB2BF" })
vim.api.nvim_set_hl(0, "TSProperty", { fg = "#ABB2BF" })
vim.api.nvim_set_hl(0, "TSPunctDelimiter", { fg = "#BE5046" })
vim.api.nvim_set_hl(0, "TSPunctBracket", { fg = "#ABB2BF" })
vim.api.nvim_set_hl(0, "TSPunctSpecial", { fg = "#BE5046" })
vim.api.nvim_set_hl(0, "TSRepeat", { fg = "#C678DD" })
vim.api.nvim_set_hl(0, "TSString", { fg = "#98C379" })
vim.api.nvim_set_hl(0, "TSStringRegex", { fg = "#56B6C2" })
vim.api.nvim_set_hl(0, "TSStringEscape", { fg = "#56B6C2" })
vim.api.nvim_set_hl(0, "TSSymbol", { fg = "#98C379" })
vim.api.nvim_set_hl(0, "TSTag", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "TSTagDelimiter", { fg = "#BE5046" })
vim.api.nvim_set_hl(0, "TSText", { fg = "#ABB2BF" })
vim.api.nvim_set_hl(0, "TSStrong", {})
vim.api.nvim_set_hl(0, "TSEmphasis", { fg = "#D19A66" })
vim.api.nvim_set_hl(0, "TSUnderline", { fg = "#121B2B" })
vim.api.nvim_set_hl(0, "TSStrike", { fg = "#121B2B" })
vim.api.nvim_set_hl(0, "TSTitle", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "TSLiteral", { fg = "#D19A66" })
vim.api.nvim_set_hl(0, "TSURI", { fg = "#D19A66" })
vim.api.nvim_set_hl(0, "TSType", { fg = "#E5C07B" })
vim.api.nvim_set_hl(0, "TSTypeBuiltin", { fg = "#E5C07B" })
vim.api.nvim_set_hl(0, "TSVariable", { link = "Identifier" })
vim.api.nvim_set_hl(0, "TSVariableBuiltin", { link = "Identifier" })
vim.api.nvim_set_hl(0, "TSDefinition", {})
vim.api.nvim_set_hl(0, "TSDefinitionUsage", {})
vim.api.nvim_set_hl(0, "TSCurrentScope", {})
vim.api.nvim_set_hl(0, "@error", { link = "TSError" })
vim.api.nvim_set_hl(0, "LspReferenceTarget", { link = "LspReferenceText" })
vim.api.nvim_set_hl(0, "@define", { link = "Define" })
vim.api.nvim_set_hl(0, "@string.regex", { link = "TSStringRegex" })
vim.api.nvim_set_hl(0, "@function.call", { link = "TSFunction" })
vim.api.nvim_set_hl(0, "@method.call", { link = "TSMethod" })
vim.api.nvim_set_hl(0, "@keyword.function", { link = "TSKeywordFunction" })
vim.api.nvim_set_hl(0, "@debug", { link = "Debug" })
vim.api.nvim_set_hl(0, "@exception", { link = "TSException" })
vim.api.nvim_set_hl(0, "@type.qualifier", { link = "TSKeyword" })
vim.api.nvim_set_hl(0, "@type.definition", { link = "TSType" })
vim.api.nvim_set_hl(0, "@text.literal", { link = "TSLiteral" })
vim.api.nvim_set_hl(0, "@text.reference", { link = "TSParameterReference" })
vim.api.nvim_set_hl(0, "@text.todo", { link = "Todo" })
vim.api.nvim_set_hl(0, "@markup.link", { link = "@text.reference" })
vim.api.nvim_set_hl(0, "@markup.raw", { link = "@text.literal" })
vim.api.nvim_set_hl(0, "@markup.link.label", { link = "@string.special" })
vim.api.nvim_set_hl(0, "rainbowcol1", { fg = "#B6BDCA" })
vim.api.nvim_set_hl(0, "rainbowcol2", { fg = "#D19A66" })
vim.api.nvim_set_hl(0, "rainbowcol3", { fg = "#E5C07B" })
vim.api.nvim_set_hl(0, "rainbowcol4", { fg = "#C8CCD4" })
vim.api.nvim_set_hl(0, "rainbowcol5", { fg = "#56B6C2" })
vim.api.nvim_set_hl(0, "rainbowcol6", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "rainbowcol7", { fg = "#C678DD" })
vim.api.nvim_set_hl(0, "TermCursor", { fg = "#121B2B", bg = "#ABB2BF" })
vim.api.nvim_set_hl(0, "TermCursorNC", { fg = "#121B2B", bg = "#ABB2BF" })
vim.api.nvim_set_hl(0, "User1", { fg = "#F04C75", bg = "#1D3872" })
vim.api.nvim_set_hl(0, "User2", { fg = "#C678DD", bg = "#1D3872" })
vim.api.nvim_set_hl(0, "User3", { fg = "#ABB2BF", bg = "#1D3872" })
vim.api.nvim_set_hl(0, "User4", { fg = "#56B6C2", bg = "#1D3872" })
vim.api.nvim_set_hl(0, "User5", { fg = "#ABB2BF", bg = "#1D3872" })
vim.api.nvim_set_hl(0, "User6", { fg = "#ABB2BF", bg = "#213554" })
vim.api.nvim_set_hl(0, "User7", { fg = "#ABB2BF", bg = "#1D3872" })
vim.api.nvim_set_hl(0, "User8", { fg = "#121B2B", bg = "#1D3872" })
vim.api.nvim_set_hl(0, "User9", { fg = "#121B2B", bg = "#1D3872" })
vim.api.nvim_set_hl(0, "TelescopePromptBorder", { fg = "#1A3266", bg = "#1A3266" })
vim.api.nvim_set_hl(0, "TelescopePreviewTitle", { fg = "#1D2F4B", bg = "#98C379" })
vim.api.nvim_set_hl(0, "@markup.list", { link = "@punctuation.special" })
vim.api.nvim_set_hl(0, "TelescopeResultsTitle", { fg = "#101826", bg = "#101826" })
vim.api.nvim_set_hl(0, "TelescopePreviewLine", { bg = "#213554" })
vim.api.nvim_set_hl(0, "IndentBlanklineContextChar", { fg = "#3AA3E9" })
vim.api.nvim_set_hl(0, "Whitespace", { link = "NonText" })
vim.api.nvim_set_hl(0, "CmpDocumentationBorder", { fg = "#ABB2BF", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "CmpDocumentation", { fg = "#ABB2BF", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "CmpItemKindDefault", { fg = "#ABB2BF" })
vim.api.nvim_set_hl(0, "CmpItemMenu", { fg = "#3AA3E9" })
vim.api.nvim_set_hl(0, "CmpItemKindKeyword", { fg = "#C678DD" })
vim.api.nvim_set_hl(0, "CmpItemKindConstant", { fg = "#D19A66" })
vim.api.nvim_set_hl(0, "CmpItemKindReference", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "CmpItemKindValue", { fg = "#D19A66" })
vim.api.nvim_set_hl(0, "CmpItemKindConstructor", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "CmpItemKindStruct", { fg = "#E5C07B" })
vim.api.nvim_set_hl(0, "@diff.plus", { link = "@text.diff.add" })
vim.api.nvim_set_hl(0, "@diff.minus", { link = "@text.diff.delete" })
vim.api.nvim_set_hl(0, "@diff.delta", { link = "DiffChange" })
vim.api.nvim_set_hl(0, "@tag", { link = "TSTag" })
vim.api.nvim_set_hl(0, "@tag.attribute", { link = "TSAttribute" })
vim.api.nvim_set_hl(0, "@tag.delimiter", { link = "TSTagDelimiter" })
vim.api.nvim_set_hl(0, "CmpItemKindTypeParameter", { fg = "#E5C07B" })
vim.api.nvim_set_hl(0, "CmpItemKindEnumMember", { fg = "#E5C07B" })
vim.api.nvim_set_hl(0, "@lsp.type.comment", { link = "@comment" })
vim.api.nvim_set_hl(0, "@struct", { link = "TSType" })
vim.api.nvim_set_hl(0, "@enum", { link = "TSType" })
vim.api.nvim_set_hl(0, "@lsp.type.enum", { link = "@type" })
vim.api.nvim_set_hl(0, "@lsp.type.interface", { link = "@type" })
vim.api.nvim_set_hl(0, "@lsp.type.keyword", { link = "@keyword" })
vim.api.nvim_set_hl(0, "@lsp.type.namespace", { link = "@namespace" })
vim.api.nvim_set_hl(0, "@decorator", { link = "Identifier" })
vim.api.nvim_set_hl(0, "@lsp.type.parameter", { link = "@parameter" })
vim.api.nvim_set_hl(0, "@lsp.type.class", { link = "@type" })
vim.api.nvim_set_hl(0, "@lsp.type.struct", { link = "@type" })
vim.api.nvim_set_hl(0, "@lsp.type.enumMember", { link = "@constant" })
vim.api.nvim_set_hl(0, "@lsp.type.function", { link = "@function" })
vim.api.nvim_set_hl(0, "@lsp.type.method", { link = "@method" })
vim.api.nvim_set_hl(0, "@lsp.type.macro", { link = "@function.macro" })
vim.api.nvim_set_hl(0, "@lsp.type.decorator", { link = "@function" })
vim.api.nvim_set_hl(0, "DapUINormal", { link = "Normal" })
vim.api.nvim_set_hl(0, "DapUIFloatNormal", { link = "NormalFloat" })
vim.api.nvim_set_hl(0, "DapUICurrentFrameName", { link = "DapUIBreakpointsCurrentLine" })
vim.api.nvim_set_hl(0, "DapUIStepOver", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "DapUIStepInto", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "DapUIStepBack", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "DapUIStepOut", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "DapUIStop", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "DapUIPlayPause", { fg = "#98C379" })
vim.api.nvim_set_hl(0, "DapUIRestart", { fg = "#98C379" })
vim.api.nvim_set_hl(0, "DapUIUnavailable", { fg = "#1D3872" })
vim.api.nvim_set_hl(0, "DapUIWinSelect", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "DapUIEndofBuffer", { link = "EndOfBuffer" })
vim.api.nvim_set_hl(0, "EndOfBuffer", { fg = "#242629" })
vim.api.nvim_set_hl(0, "DapUINormalNC", { link = "Normal" })
vim.api.nvim_set_hl(0, "DapUIPlayPauseNC", { fg = "#98C379" })
vim.api.nvim_set_hl(0, "DapUIRestartNC", { fg = "#98C379" })
vim.api.nvim_set_hl(0, "DapUIStopNC", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "DapUIUnavailableNC", { fg = "#1D3872" })
vim.api.nvim_set_hl(0, "DapUIStepOverNC", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "DapUIStepIntoNC", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "DapUIStepBackNC", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "DapUIStepOutNC", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "Terminal", { link = "Normal" })
vim.api.nvim_set_hl(0, "IblIndent", { fg = "#1D3872" })
vim.api.nvim_set_hl(0, "IblScope", { fg = "#3AA3E9" })
vim.api.nvim_set_hl(0, "IblWhitespace", { link = "Whitespace" })
vim.api.nvim_set_hl(0, "CmpItemAbbr", { fg = "#ABB2BF", bg = "#213554" })
vim.api.nvim_set_hl(0, "CmpItemAbbrDeprecated", { fg = "#80B2D6" })
vim.api.nvim_set_hl(0, "CmpItemAbbrMatch", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "CmpItemAbbrMatchFuzzy", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "CmpItemKindClass", { fg = "#E5C07B" })
vim.api.nvim_set_hl(0, "CmpItemKindFunction", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "CmpItemKindInterface", { fg = "#E5C07B" })
vim.api.nvim_set_hl(0, "CmpItemKindMethod", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "CmpItemKindSnippet", { fg = "#3AA3E9" })
vim.api.nvim_set_hl(0, "CmpItemKindVariable", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "LspSignatureActiveParameter", { link = "Visual" })
vim.api.nvim_set_hl(0, "TelescopeBorder", { fg = "#101826", bg = "#101826" })
vim.api.nvim_set_hl(0, "TelescopeNormal", { bg = "#101826" })
vim.api.nvim_set_hl(0, "TelescopePromptNormal", { fg = "#ABB2BF", bg = "#1A3266" })
vim.api.nvim_set_hl(0, "TelescopePromptPrefix", { fg = "#F04C75", bg = "#1A3266" })
vim.api.nvim_set_hl(0, "TelescopeSelection", { bg = "#1A3266" })
vim.api.nvim_set_hl(0, "FzfLuaBorder", { link = "Normal" })
vim.api.nvim_set_hl(0, "FzfLuaCursorLine", { link = "CursorLine" })
vim.api.nvim_set_hl(0, "FzfLuaFilePart", { link = "@none" })
vim.api.nvim_set_hl(0, "Ignore", { fg = "#5C6366" })
vim.api.nvim_set_hl(0, "CursorIM", { link = "Cursor" })
vim.api.nvim_set_hl(0, "diffCommon", { link = "WarningMsg" })
vim.api.nvim_set_hl(0, "diffIdentical", { link = "WarningMsg" })
vim.api.nvim_set_hl(0, "diffIsA", { link = "WarningMsg" })
vim.api.nvim_set_hl(0, "diffNoEOL", { link = "WarningMsg" })
vim.api.nvim_set_hl(0, "yamlFlowIndicator", { link = "SpecialKey" })
vim.api.nvim_set_hl(0, "FzfLuaTitleFlags", { link = "CursorLine" })
vim.api.nvim_set_hl(0, "FzfLuaHelpNormal", { link = "FzfLuaNormal" })
vim.api.nvim_set_hl(0, "FzfLuaHelpBorder", { link = "FzfLuaBorder" })
vim.api.nvim_set_hl(0, "FzfLuaPreviewNormal", { link = "FzfLuaNormal" })
vim.api.nvim_set_hl(0, "FzfLuaPreviewBorder", { link = "FzfLuaBorder" })
vim.api.nvim_set_hl(0, "FzfLuaPreviewTitle", { link = "FzfLuaTitle" })
vim.api.nvim_set_hl(0, "FzfLuaCursor", { link = "Cursor" })
vim.api.nvim_set_hl(0, "FzfLuaCursorLineNr", { link = "CursorLineNr" })
vim.api.nvim_set_hl(0, "FzfLuaSearch", { link = "IncSearch" })
vim.api.nvim_set_hl(0, "FzfLuaScrollBorderEmpty", { link = "FzfLuaBorder" })
vim.api.nvim_set_hl(0, "FzfLuaScrollBorderFull", { link = "FzfLuaBorder" })
vim.api.nvim_set_hl(0, "FzfLuaScrollFloatEmpty", { link = "PmenuSbar" })
vim.api.nvim_set_hl(0, "FzfLuaScrollFloatFull", { link = "PmenuThumb" })
vim.api.nvim_set_hl(0, "Changed", { fg = "#8CF8F7" })
vim.api.nvim_set_hl(0, "FzfLuaDirIcon", { link = "Directory" })
vim.api.nvim_set_hl(0, "FzfLuaDirPart", { link = "Comment" })
vim.api.nvim_set_hl(0, "@none", { link = "TSNone" })
vim.api.nvim_set_hl(0, "FzfLuaBufId", { link = "TabLine" })
vim.api.nvim_set_hl(0, "FzfLuaBufName", { link = "Directory" })
vim.api.nvim_set_hl(0, "FzfLuaBufLineNr", { link = "LineNr" })
vim.api.nvim_set_hl(0, "cssTableProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssTableAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssTextProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssTextAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssTransformProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssTransitionProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssTransitionAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssUIProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssUIAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "DiagnosticDeprecated", {})
vim.api.nvim_set_hl(0, "cssIEUIProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "FzfLuaFzfNormal", { link = "FzfLuaNormal" })
vim.api.nvim_set_hl(0, "cssAuralAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "FzfLuaFzfCursorLine", { link = "FzfLuaCursorLine" })
vim.api.nvim_set_hl(0, "cssMediaProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "FzfLuaFzfMatch", { link = "Special" })
vim.api.nvim_set_hl(0, "cssKeyFrameProp", { link = "Constant" })
vim.api.nvim_set_hl(0, "FzfLuaFzfBorder", { link = "FzfLuaBorder" })
vim.api.nvim_set_hl(0, "cssAtKeyword", { link = "PreProc" })
vim.api.nvim_set_hl(0, "FzfLuaFzfScrollbar", { link = "FzfLuaFzfBorder" })
vim.api.nvim_set_hl(0, "cssFontDescriptorProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "FzfLuaFzfSeparator", { link = "FzfLuaFzfBorder" })
vim.api.nvim_set_hl(0, "cssBraces", { link = "Function" })
vim.api.nvim_set_hl(0, "FzfLuaFzfGutter", { link = "FzfLuaNormal" })
vim.api.nvim_set_hl(0, "cssAtRule", { link = "Include" })
vim.api.nvim_set_hl(0, "FzfLuaFzfHeader", { link = "FzfLuaTitle" })
vim.api.nvim_set_hl(0, "cssVendor", { link = "Comment" })
vim.api.nvim_set_hl(0, "FzfLuaFzfInfo", { link = "NonText" })
vim.api.nvim_set_hl(0, "cssNoise", { link = "Noise" })
vim.api.nvim_set_hl(0, "FzfLuaFzfPointer", { link = "Special" })
vim.api.nvim_set_hl(0, "cssBraceError", { link = "Error" })
vim.api.nvim_set_hl(0, "FzfLuaFzfMarker", { link = "FzfLuaFzfPointer" })
vim.api.nvim_set_hl(0, "cssPseudoClassId", { link = "PreProc" })
vim.api.nvim_set_hl(0, "FzfLuaFzfSpinner", { link = "FzfLuaFzfPointer" })
vim.api.nvim_set_hl(0, "cssMediaType", { link = "Special" })
vim.api.nvim_set_hl(0, "FzfLuaFzfPrompt", { link = "Special" })
vim.api.nvim_set_hl(0, "cssDeprecated", { link = "Error" })
vim.api.nvim_set_hl(0, "FzfLuaFzfQuery", { link = "FzfLuaNormal" })
vim.api.nvim_set_hl(0, "cssLineboxProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssMarqueeProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssPagedMediaProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssPrintProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssRubyProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssSpeechProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssRenderProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssContentForPagedMediaAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssDimensionAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssGridAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssHyerlinkAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssLineboxAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssMarginAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssMarqueeAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssPaddingAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssPagedMediaAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "Folded", { fg = "#80B2D6", bg = "#213554" })
vim.api.nvim_set_hl(0, "IncSearch", { fg = "#213554", bg = "#D19A66" })
vim.api.nvim_set_hl(0, "LineNr", { fg = "#3AA3E9", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "MatchParen", { bg = "#80B2D6" })
vim.api.nvim_set_hl(0, "ModeMsg", { fg = "#98C379" })
vim.api.nvim_set_hl(0, "MoreMsg", { fg = "#98C379" })
vim.api.nvim_set_hl(0, "NonText", { fg = "#80B2D6" })
vim.api.nvim_set_hl(0, "Normal", { fg = "#ABB2BF", bg = "#121B2B" })
-- vim.api.nvim_set_hl(0, "NormalFloat", { fg = "#ABB2BF", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "NormalFloat", { link = 'CursorColumn' })
vim.api.nvim_set_hl(0, "NormalNC", { fg = "#ABB2BF", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "markdownBlockquote", { link = "Comment" })
vim.api.nvim_set_hl(0, "markdownListMarker", { link = "htmlTagName" })
vim.api.nvim_set_hl(0, "NvimInternalError", { fg = "#121B2B", bg = "#F04C75" })
vim.api.nvim_set_hl(0, "Pmenu", { fg = "#ABB2BF", bg = "#213554" })
vim.api.nvim_set_hl(0, "PmenuExtra", { link = "Pmenu" })
vim.api.nvim_set_hl(0, "PmenuExtraSel", { link = "PmenuSel" })
vim.api.nvim_set_hl(0, "PmenuKind", { link = "Pmenu" })
vim.api.nvim_set_hl(0, "PmenuKindSel", { link = "PmenuSel" })
vim.api.nvim_set_hl(0, "PmenuSbar", { fg = "#1D2023", bg = "#1D2023" })
vim.api.nvim_set_hl(0, "PmenuSel", { fg = "#213554", bg = "#ABB2BF" })
vim.api.nvim_set_hl(0, "PmenuThumb", { fg = "#A3DB81", bg = "#4F5258" })
vim.api.nvim_set_hl(0, "Question", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "RedrawDebugClear", { bg = "#6B5300" })
vim.api.nvim_set_hl(0, "RedrawDebugComposed", { bg = "#005523" })
vim.api.nvim_set_hl(0, "RedrawDebugRecompose", { bg = "#590008" })
vim.api.nvim_set_hl(0, "markdownId", { link = "Type" })
vim.api.nvim_set_hl(0, "Search", { fg = "#213554", bg = "#E5C07B" })
vim.api.nvim_set_hl(0, "SignColumn", { fg = "#3AA3E9", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "SpecialKey", { fg = "#80B2D6" })
vim.api.nvim_set_hl(0, "SpellBad", {})
vim.api.nvim_set_hl(0, "markdownBoldItalicDelimiter", { link = "markdownBoldItalic" })
vim.api.nvim_set_hl(0, "markdownBoldItalic", { link = "htmlBoldItalic" })
vim.api.nvim_set_hl(0, "SpellCap", {})
vim.api.nvim_set_hl(0, "SpellLocal", {})
vim.api.nvim_set_hl(0, "SpellRare", {})
vim.api.nvim_set_hl(0, "StatusLine", { fg = "#ABB2BF", bg = "#1D3872" })
vim.api.nvim_set_hl(0, "StatusLineNC", { fg = "#3AA3E9", bg = "#213554" })
vim.api.nvim_set_hl(0, "StatusLineTerm", { link = "StatusLine" })
vim.api.nvim_set_hl(0, "StatusLineTermNC", { link = "StatusLineNC" })
vim.api.nvim_set_hl(0, "Substitute", { fg = "#213554", bg = "#E5C07B" })
vim.api.nvim_set_hl(0, "TabLine", { fg = "#80B2D6", bg = "#213554" })
vim.api.nvim_set_hl(0, "TabLineFill", { fg = "#80B2D6", bg = "#213554" })
vim.api.nvim_set_hl(0, "TabLineSel", { fg = "#98C379", bg = "#213554" })
vim.api.nvim_set_hl(0, "VertSplit", { fg = "#ABB2BF", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "Visual", { bg = "#1D3872" })
vim.api.nvim_set_hl(0, "WildMenu", { fg = "#F04C75", bg = "#E5C07B" })
vim.api.nvim_set_hl(0, "WinBar", { fg = "#ABB2BF" })
vim.api.nvim_set_hl(0, "WinBarNC", { fg = "#3AA3E9" })
vim.api.nvim_set_hl(0, "WinSeparator", { link = "Normal" })
vim.api.nvim_set_hl(0, "DiagnosticError", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "DiagnosticHint", { fg = "#56B6C2" })
vim.api.nvim_set_hl(0, "yamlFlowString", { link = "yamlString" })
vim.api.nvim_set_hl(0, "DiagnosticInfo", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "DiagnosticOk", { fg = "#B3F6C0" })
vim.api.nvim_set_hl(0, "DiagnosticWarn", { fg = "#C678DD" })
vim.api.nvim_set_hl(0, "yamlNull", { link = "yamlConstant" })
vim.api.nvim_set_hl(0, "yamlFlowMappingKey", { link = "yamlMappingKey" })
vim.api.nvim_set_hl(0, "yamlMappingKey", { link = "Identifier" })
vim.api.nvim_set_hl(0, "yamlFlowMappingKeyStart", { link = "yamlMappingKeyStart" })
vim.api.nvim_set_hl(0, "yamlMappingKeyStart", { link = "Special" })
vim.api.nvim_set_hl(0, "DiagnosticFloatingError", { link = "DiagnosticError" })
vim.api.nvim_set_hl(0, "DiagnosticFloatingHint", { link = "DiagnosticHint" })
vim.api.nvim_set_hl(0, "DiagnosticFloatingInfo", { link = "DiagnosticInfo" })
vim.api.nvim_set_hl(0, "DiagnosticFloatingOk", { link = "DiagnosticOk" })
vim.api.nvim_set_hl(0, "DiagnosticFloatingWarn", { link = "DiagnosticWarn" })
vim.api.nvim_set_hl(0, "DiagnosticSignError", { link = "DiagnosticError" })
vim.api.nvim_set_hl(0, "DiagnosticSignHint", { link = "DiagnosticHint" })
vim.api.nvim_set_hl(0, "DiagnosticSignInfo", { link = "DiagnosticInfo" })
vim.api.nvim_set_hl(0, "DiagnosticSignOk", { link = "DiagnosticOk" })
vim.api.nvim_set_hl(0, "DiagnosticSignWarn", { link = "DiagnosticWarn" })
vim.api.nvim_set_hl(0, "DiagnosticUnderlineError", {})
vim.api.nvim_set_hl(0, "DiagnosticUnderlineHint", {})
vim.api.nvim_set_hl(0, "DiagnosticUnderlineInfo", {})
vim.api.nvim_set_hl(0, "DiagnosticUnderlineOk", {})
vim.api.nvim_set_hl(0, "DiagnosticUnderlineWarn", {})
vim.api.nvim_set_hl(0, "DiagnosticVirtualTextError", { link = "DiagnosticError" })
vim.api.nvim_set_hl(0, "DiagnosticVirtualTextHint", { link = "DiagnosticHint" })
vim.api.nvim_set_hl(0, "DiagnosticVirtualTextInfo", { link = "DiagnosticInfo" })
vim.api.nvim_set_hl(0, "DiagnosticVirtualTextOk", { link = "DiagnosticOk" })
vim.api.nvim_set_hl(0, "DiagnosticVirtualTextWarn", { link = "DiagnosticWarn" })
vim.api.nvim_set_hl(0, "Character", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "Comment", { fg = "#80B2D6" })
vim.api.nvim_set_hl(0, "Constant", { fg = "#D19A66" })
vim.api.nvim_set_hl(0, "Debug", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "Define", { fg = "#C678DD" })
vim.api.nvim_set_hl(0, "Delimiter", { fg = "#BE5046" })
vim.api.nvim_set_hl(0, "Error", { fg = "#F04C75", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "Exception", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "Float", { fg = "#D19A66" })
vim.api.nvim_set_hl(0, "Function", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "Keyword", { fg = "#C678DD" })
vim.api.nvim_set_hl(0, "Label", { fg = "#E5C07B" })
vim.api.nvim_set_hl(0, "LspCodeLens", { link = "NonText" })
vim.api.nvim_set_hl(0, "LspCodeLensSeparator", { link = "LspCodeLens" })
vim.api.nvim_set_hl(0, "LspInlayHint", { fg = "#80B2D6" })
vim.api.nvim_set_hl(0, "LspReferenceRead", {})
vim.api.nvim_set_hl(0, "DapUIBreakpointsLine", { link = "DapUILineNumber" })
vim.api.nvim_set_hl(0, "LspReferenceText", {})
vim.api.nvim_set_hl(0, "LspReferenceWrite", {})
vim.api.nvim_set_hl(0, "Operator", { fg = "#C678DD" })
vim.api.nvim_set_hl(0, "PreCondit", { link = "PreProc" })
vim.api.nvim_set_hl(0, "SpecialChar", { fg = "#BE5046" })
vim.api.nvim_set_hl(0, "Statement", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "LineNrAbove", { link = "LineNr" })
vim.api.nvim_set_hl(0, "LineNrBelow", { link = "LineNr" })
vim.api.nvim_set_hl(0, "CursorLineSign", { link = "SignColumn" })
vim.api.nvim_set_hl(0, "CursorLineFold", { link = "FoldColumn" })
vim.api.nvim_set_hl(0, "PmenuMatch", {})
vim.api.nvim_set_hl(0, "PmenuMatchSel", {})
vim.api.nvim_set_hl(0, "MsgSeparator", { link = "StatusLine" })
vim.api.nvim_set_hl(0, "MsgArea", {})
vim.api.nvim_set_hl(0, "FloatFooter", { link = "FloatTitle" })
vim.api.nvim_set_hl(0, "RedrawDebugNormal", {})
vim.api.nvim_set_hl(0, "lCursor", { fg = "#121B2B", bg = "#ABB2BF" })
vim.api.nvim_set_hl(0, "ComplMatchIns", {})
vim.api.nvim_set_hl(0, "SnippetTabstop", { link = "Visual" })
vim.api.nvim_set_hl(0, "DiagnosticVirtualLinesOk", { link = "DiagnosticOk" })
vim.api.nvim_set_hl(0, "@markup", { link = "Special" })
vim.api.nvim_set_hl(0, "Added", { fg = "#B3F6C0" })
vim.api.nvim_set_hl(0, "@tag.builtin", { link = "Special" })
vim.api.nvim_set_hl(0, "@markup.heading.1.delimiter.vimdoc", { fg = "#121B2B", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "htmlTag", { fg = "#D1D1D1" })
vim.api.nvim_set_hl(0, "@markup.heading.2.delimiter.vimdoc", { fg = "#121B2B", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "@lsp.type.event", { link = "@type" })
vim.api.nvim_set_hl(0, "@lsp.type.modifier", { link = "@type.qualifier" })
vim.api.nvim_set_hl(0, "@lsp.type.number", { link = "@number" })
vim.api.nvim_set_hl(0, "@lsp.type.operator", { link = "@operator" })
vim.api.nvim_set_hl(0, "@lsp.type.regexp", { link = "@string.regexp" })
vim.api.nvim_set_hl(0, "@lsp.type.string", { link = "@string" })
vim.api.nvim_set_hl(0, "@lsp.type.typeParameter", { link = "@type.definition" })
vim.api.nvim_set_hl(0, "@lsp.mod.deprecated", { link = "DiagnosticDeprecated" })
vim.api.nvim_set_hl(0, "FloatShadow", { bg = "#4F5258" })
vim.api.nvim_set_hl(0, "FloatShadowThrough", { bg = "#4F5258" })
vim.api.nvim_set_hl(0, "NvimAssignment", { link = "Operator" })
vim.api.nvim_set_hl(0, "NvimPlainAssignment", { link = "NvimAssignment" })
vim.api.nvim_set_hl(0, "NvimAugmentedAssignment", { link = "NvimAssignment" })
vim.api.nvim_set_hl(0, "NvimAssignmentWithAddition", { link = "NvimAugmentedAssignment" })
vim.api.nvim_set_hl(0, "NvimAssignmentWithSubtraction", { link = "NvimAugmentedAssignment" })
vim.api.nvim_set_hl(0, "NvimAssignmentWithConcatenation", { link = "NvimAugmentedAssignment" })
vim.api.nvim_set_hl(0, "NvimOperator", { link = "Operator" })
vim.api.nvim_set_hl(0, "NvimUnaryOperator", { link = "NvimOperator" })
vim.api.nvim_set_hl(0, "NvimUnaryPlus", { link = "NvimUnaryOperator" })
vim.api.nvim_set_hl(0, "NvimUnaryMinus", { link = "NvimUnaryOperator" })
vim.api.nvim_set_hl(0, "NvimNot", { link = "NvimUnaryOperator" })
vim.api.nvim_set_hl(0, "@variable", { link = "TSVariable" })
vim.api.nvim_set_hl(0, "@variable.builtin", { link = "TSVariableBuiltin" })
vim.api.nvim_set_hl(0, "@variable.parameter", { link = "@parameter" })
vim.api.nvim_set_hl(0, "@variable.parameter.builtin", { link = "Special" })
vim.api.nvim_set_hl(0, "NvimBinaryMinus", { link = "NvimBinaryOperator" })
vim.api.nvim_set_hl(0, "@constant", { link = "TSConstant" })
vim.api.nvim_set_hl(0, "@constant.builtin", { link = "TSConstant" })
vim.api.nvim_set_hl(0, "@constant.macro", { link = "TSConstant" })
vim.api.nvim_set_hl(0, "@module", { link = "@namespace" })
vim.api.nvim_set_hl(0, "@module.builtin", { link = "Special" })
vim.api.nvim_set_hl(0, "@label", { link = "TSLabel" })
vim.api.nvim_set_hl(0, "@string", { link = "TSString" })
vim.api.nvim_set_hl(0, "@string.regexp", { link = "@string.regex" })
vim.api.nvim_set_hl(0, "@string.escape", { link = "TSStringEscape" })
vim.api.nvim_set_hl(0, "@string.special", { link = "SpecialChar" })
vim.api.nvim_set_hl(0, "NvimLambda", { link = "NvimParenthesis" })
vim.api.nvim_set_hl(0, "@string.special.url", { link = "@text.uri" })
vim.api.nvim_set_hl(0, "@character", { link = "TSCharacter" })
vim.api.nvim_set_hl(0, "@character.special", { link = "SpecialChar" })
vim.api.nvim_set_hl(0, "@number.float", { link = "@float" })
vim.api.nvim_set_hl(0, "NvimSubscriptColon", { link = "NvimSubscript" })
vim.api.nvim_set_hl(0, "@type", { link = "TSType" })
vim.api.nvim_set_hl(0, "@type.builtin", { link = "TSTypeBuiltin" })
vim.api.nvim_set_hl(0, "@attribute", { link = "TSAttribute" })
vim.api.nvim_set_hl(0, "@attribute.builtin", { link = "Special" })
vim.api.nvim_set_hl(0, "@property", { link = "TSProperty" })
vim.api.nvim_set_hl(0, "@function", { link = "TSFunction" })
vim.api.nvim_set_hl(0, "@function.builtin", { link = "TSFuncBuiltin" })
vim.api.nvim_set_hl(0, "NvimIdentifierName", { link = "NvimIdentifier" })
vim.api.nvim_set_hl(0, "@function.method", { link = "@method" })
vim.api.nvim_set_hl(0, "NvimColon", { link = "Delimiter" })
vim.api.nvim_set_hl(0, "@constructor", { link = "TSConstructor" })
vim.api.nvim_set_hl(0, "@operator", { link = "TSOperator" })
vim.api.nvim_set_hl(0, "@keyword", { link = "TSKeyword" })
vim.api.nvim_set_hl(0, "NvimNumber", { link = "Number" })
vim.api.nvim_set_hl(0, "NvimFloat", { link = "NvimNumber" })
vim.api.nvim_set_hl(0, "NvimNumberPrefix", { link = "Type" })
vim.api.nvim_set_hl(0, "NvimOptionSigil", { link = "Type" })
vim.api.nvim_set_hl(0, "NvimOptionName", { link = "NvimIdentifier" })
vim.api.nvim_set_hl(0, "NvimOptionScope", { link = "NvimIdentifierScope" })
vim.api.nvim_set_hl(0, "NvimOptionScopeDelimiter", { link = "NvimIdentifierScopeDelimiter" })
vim.api.nvim_set_hl(0, "NvimEnvironmentSigil", { link = "NvimOptionSigil" })
vim.api.nvim_set_hl(0, "NvimEnvironmentName", { link = "NvimIdentifier" })
vim.api.nvim_set_hl(0, "NvimString", { link = "String" })
vim.api.nvim_set_hl(0, "NvimStringBody", { link = "NvimString" })
vim.api.nvim_set_hl(0, "@comment", { link = "TSComment" })
vim.api.nvim_set_hl(0, "@comment.error", { link = "@text.danger" })
vim.api.nvim_set_hl(0, "@comment.warning", { link = "@text.warning" })
vim.api.nvim_set_hl(0, "@comment.todo", { link = "@text.todo" })
vim.api.nvim_set_hl(0, "NvimSingleQuotedQuote", { link = "NvimStringSpecial" })
vim.api.nvim_set_hl(0, "NvimDoubleQuote", { link = "NvimStringQuote" })
vim.api.nvim_set_hl(0, "NvimDoubleQuotedBody", { link = "NvimStringBody" })
vim.api.nvim_set_hl(0, "@comment.note", { link = "DiagnosticInfo" })
vim.api.nvim_set_hl(0, "NvimFigureBrace", { link = "NvimInternalError" })
vim.api.nvim_set_hl(0, "@markup.strong", { link = "@text.strong" })
vim.api.nvim_set_hl(0, "@markup.italic", { link = "Italic" })
vim.api.nvim_set_hl(0, "@markup.strikethrough", { link = "@text.strikethrough" })
vim.api.nvim_set_hl(0, "@markup.underline", {})
vim.api.nvim_set_hl(0, "@markup.heading", { link = "@text.title" })
vim.api.nvim_set_hl(0, "NvimInvalidPlainAssignment", { link = "NvimInvalidAssignment" })
vim.api.nvim_set_hl(0, "NvimInvalidAugmentedAssignment", { link = "NvimInvalidAssignment" })
vim.api.nvim_set_hl(0, "NvimInvalidAssignmentWithAddition", { link = "NvimInvalidAugmentedAssignment" })
vim.api.nvim_set_hl(0, "NvimInvalidAssignmentWithSubtraction", { link = "NvimInvalidAugmentedAssignment" })
vim.api.nvim_set_hl(0, "NvimInvalidAssignmentWithConcatenation", { link = "NvimInvalidAugmentedAssignment" })
vim.api.nvim_set_hl(0, "NvimInvalidOperator", { link = "NvimInvalid" })
vim.api.nvim_set_hl(0, "NvimInvalidUnaryOperator", { link = "NvimInvalidOperator" })
vim.api.nvim_set_hl(0, "NvimInvalidUnaryPlus", { link = "NvimInvalidUnaryOperator" })
vim.api.nvim_set_hl(0, "NvimInvalidUnaryMinus", { link = "NvimInvalidUnaryOperator" })
vim.api.nvim_set_hl(0, "NvimInvalidNot", { link = "NvimInvalidUnaryOperator" })
vim.api.nvim_set_hl(0, "NvimInvalidBinaryOperator", { link = "NvimInvalidOperator" })
vim.api.nvim_set_hl(0, "VisualNOS", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "NvimInvalidComparisonModifier", { link = "NvimInvalidComparison" })
vim.api.nvim_set_hl(0, "QuickFixLine", { bg = "#213554" })
vim.api.nvim_set_hl(0, "NvimInvalidBinaryMinus", { link = "NvimInvalidBinaryOperator" })
vim.api.nvim_set_hl(0, "NvimInvalidConcat", { link = "NvimInvalidBinaryOperator" })
vim.api.nvim_set_hl(0, "NvimInvalidConcatOrSubscript", { link = "NvimInvalidConcat" })
vim.api.nvim_set_hl(0, "NvimInvalidOr", { link = "NvimInvalidBinaryOperator" })
vim.api.nvim_set_hl(0, "Typedef", { fg = "#E5C07B" })
vim.api.nvim_set_hl(0, "NvimInvalidMultiplication", { link = "NvimInvalidBinaryOperator" })
vim.api.nvim_set_hl(0, "NvimInvalidDivision", { link = "NvimInvalidBinaryOperator" })
vim.api.nvim_set_hl(0, "NvimInvalidMod", { link = "NvimInvalidBinaryOperator" })
vim.api.nvim_set_hl(0, "NvimInvalidTernary", { link = "NvimInvalidOperator" })
vim.api.nvim_set_hl(0, "NvimInvalidTernaryColon", { link = "NvimInvalidTernary" })
vim.api.nvim_set_hl(0, "NvimInvalidDelimiter", { link = "NvimInvalid" })
vim.api.nvim_set_hl(0, "NvimInvalidParenthesis", { link = "NvimInvalidDelimiter" })
vim.api.nvim_set_hl(0, "NvimInvalidLambda", { link = "NvimInvalidParenthesis" })
vim.api.nvim_set_hl(0, "gitcommitUntracked", { fg = "#80B2D6" })
vim.api.nvim_set_hl(0, "gitcommitDiscarded", { fg = "#80B2D6" })
vim.api.nvim_set_hl(0, "gitcommitSelected", { fg = "#80B2D6" })
vim.api.nvim_set_hl(0, "gitcommitHeader", { fg = "#C678DD" })
vim.api.nvim_set_hl(0, "gitcommitSelectedType", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "gitcommitUnmergedType", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "gitcommitDiscardedType", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "gitcommitBranch", { fg = "#D19A66" })
vim.api.nvim_set_hl(0, "gitcommitUntrackedFile", { fg = "#E5C07B" })
vim.api.nvim_set_hl(0, "gitcommitUnmergedFile", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "gitcommitDiscardedFile", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "gitcommitSelectedFile", { fg = "#98C379" })
vim.api.nvim_set_hl(0, "GitGutterAdd", { fg = "#98C379", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "GitGutterChange", { fg = "#01BFEF", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "GitGutterDelete", { fg = "#F04C75", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "GitGutterChangeDelete", { fg = "#C678DD", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "DiagnosticUnderlineWarning", {})
vim.api.nvim_set_hl(0, "DiagnosticUnderlineInformation", {})
vim.api.nvim_set_hl(0, "LspDiagnosticsDefaultError", { link = "DiagnosticError" })
vim.api.nvim_set_hl(0, "LspDiagnosticsDefaultWarning", { link = "DiagnosticWarn" })
vim.api.nvim_set_hl(0, "LspDiagnosticsDefaultInformation", { link = "DiagnosticInfo" })
vim.api.nvim_set_hl(0, "LspDiagnosticsDefaultHint", { link = "DiagnosticHint" })
vim.api.nvim_set_hl(0, "LspDiagnosticsUnderlineError", { link = "DiagnosticUnderlineError" })
vim.api.nvim_set_hl(0, "LspDiagnosticsUnderlineWarning", { link = "DiagnosticUnderlineWarning" })
vim.api.nvim_set_hl(0, "LspDiagnosticsUnderlineInformation", { link = "DiagnosticUnderlineInformation" })
vim.api.nvim_set_hl(0, "LspDiagnosticsUnderlineHint", { link = "DiagnosticUnderlineHint" })
vim.api.nvim_set_hl(0, "TSAnnotation", { fg = "#BE5046" })
vim.api.nvim_set_hl(0, "TSAttribute", { fg = "#E5C07B" })
vim.api.nvim_set_hl(0, "TSBoolean", { fg = "#D19A66" })
vim.api.nvim_set_hl(0, "TSCharacter", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "TSComment", { fg = "#80B2D6" })
vim.api.nvim_set_hl(0, "TSConstructor", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "NvimInvalidNestingParenthesis", { link = "NvimInvalidParenthesis" })
vim.api.nvim_set_hl(0, "NvimInvalidCallingParenthesis", { link = "NvimInvalidParenthesis" })
vim.api.nvim_set_hl(0, "NvimInvalidSubscript", { link = "NvimInvalidParenthesis" })
vim.api.nvim_set_hl(0, "NvimInvalidSubscriptBracket", { link = "NvimInvalidSubscript" })
vim.api.nvim_set_hl(0, "NvimInvalidSubscriptColon", { link = "NvimInvalidSubscript" })
vim.api.nvim_set_hl(0, "NvimInvalidCurly", { link = "NvimInvalidSubscript" })
vim.api.nvim_set_hl(0, "NvimInvalidContainer", { link = "NvimInvalidParenthesis" })
vim.api.nvim_set_hl(0, "NvimInvalidDict", { link = "NvimInvalidContainer" })
vim.api.nvim_set_hl(0, "NvimInvalidList", { link = "NvimInvalidContainer" })
vim.api.nvim_set_hl(0, "NvimInvalidValue", { link = "NvimInvalid" })
vim.api.nvim_set_hl(0, "NvimInvalidIdentifier", { link = "NvimInvalidValue" })
vim.api.nvim_set_hl(0, "NvimInvalidIdentifierScope", { link = "NvimInvalidIdentifier" })
vim.api.nvim_set_hl(0, "NvimInvalidIdentifierScopeDelimiter", { link = "NvimInvalidIdentifier" })
vim.api.nvim_set_hl(0, "NvimInvalidIdentifierName", { link = "NvimInvalidIdentifier" })
vim.api.nvim_set_hl(0, "NvimInvalidIdentifierKey", { link = "NvimInvalidIdentifier" })
vim.api.nvim_set_hl(0, "NvimInvalidColon", { link = "NvimInvalidDelimiter" })
vim.api.nvim_set_hl(0, "NvimInvalidComma", { link = "NvimInvalidDelimiter" })
vim.api.nvim_set_hl(0, "NvimInvalidArrow", { link = "NvimInvalidDelimiter" })
vim.api.nvim_set_hl(0, "NvimInvalidRegister", { link = "NvimInvalidValue" })
vim.api.nvim_set_hl(0, "NvimInvalidNumber", { link = "NvimInvalidValue" })
vim.api.nvim_set_hl(0, "NvimInvalidFloat", { link = "NvimInvalidNumber" })
vim.api.nvim_set_hl(0, "NvimInvalidNumberPrefix", { link = "NvimInvalidNumber" })
vim.api.nvim_set_hl(0, "NvimInvalidOptionSigil", { link = "NvimInvalidIdentifier" })
vim.api.nvim_set_hl(0, "NvimInvalidOptionName", { link = "NvimInvalidIdentifier" })
vim.api.nvim_set_hl(0, "NvimInvalidOptionScope", { link = "NvimInvalidIdentifierScope" })
vim.api.nvim_set_hl(0, "NvimInvalidOptionScopeDelimiter", { link = "NvimInvalidIdentifierScopeDelimiter" })
vim.api.nvim_set_hl(0, "NvimInvalidEnvironmentSigil", { link = "NvimInvalidOptionSigil" })
vim.api.nvim_set_hl(0, "NvimInvalidEnvironmentName", { link = "NvimInvalidIdentifier" })
vim.api.nvim_set_hl(0, "NvimInvalidString", { link = "NvimInvalidValue" })
vim.api.nvim_set_hl(0, "NvimInvalidStringBody", { link = "NvimStringBody" })
vim.api.nvim_set_hl(0, "NvimInvalidStringQuote", { link = "NvimInvalidString" })
vim.api.nvim_set_hl(0, "NvimInvalidStringSpecial", { link = "NvimStringSpecial" })
vim.api.nvim_set_hl(0, "NvimInvalidSingleQuote", { link = "NvimInvalidStringQuote" })
vim.api.nvim_set_hl(0, "NvimInvalidSingleQuotedBody", { link = "NvimInvalidStringBody" })
vim.api.nvim_set_hl(0, "NvimInvalidSingleQuotedQuote", { link = "NvimInvalidStringSpecial" })
vim.api.nvim_set_hl(0, "NvimInvalidDoubleQuote", { link = "NvimInvalidStringQuote" })
vim.api.nvim_set_hl(0, "NvimInvalidDoubleQuotedBody", { link = "NvimInvalidStringBody" })
vim.api.nvim_set_hl(0, "NvimInvalidDoubleQuotedEscape", { link = "NvimInvalidStringSpecial" })
vim.api.nvim_set_hl(0, "NvimInvalidDoubleQuotedUnknownEscape", { link = "NvimInvalidValue" })
vim.api.nvim_set_hl(0, "NvimInvalidFigureBrace", { link = "NvimInvalidDelimiter" })
vim.api.nvim_set_hl(0, "NvimInvalidSpacing", { link = "ErrorMsg" })
vim.api.nvim_set_hl(0, "NvimDoubleQuotedUnknownEscape", { link = "NvimInvalidValue" })
vim.api.nvim_set_hl(0, "xmlTagName", { link = "Statement" })
vim.api.nvim_set_hl(0, "xmlTag", { link = "Statement" })
vim.api.nvim_set_hl(0, "htmlSpecialTagName", { link = "htmlTagName" })
vim.api.nvim_set_hl(0, "HelpExample", { link = "Statement" })
vim.api.nvim_set_hl(0, "HelpCommand", { link = "Statement" })
vim.api.nvim_set_hl(0, "debugBreakpoint", { fg = "#C15959" })
vim.api.nvim_set_hl(0, "vimGroup", { link = "Type" })
vim.api.nvim_set_hl(0, "debugPC", { fg = "#C15959" })
vim.api.nvim_set_hl(0, "nvimHLGroup", { link = "vimHLGroup" })
vim.api.nvim_set_hl(0, "vim9Null", { link = "Constant" })
vim.api.nvim_set_hl(0, "vim9Boolean", { link = "Boolean" })
vim.api.nvim_set_hl(0, "vimSubst1", { link = "vimSubst" })
vim.api.nvim_set_hl(0, "vimSubst", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimNumber", { link = "Number" })
vim.api.nvim_set_hl(0, "vimAbb", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimAddress", { link = "vimMark" })
vim.api.nvim_set_hl(0, "vimMark", { link = "Number" })
vim.api.nvim_set_hl(0, "vimAutoCmd", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimBehave", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimCall", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimCatch", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimConst", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimDebuggreedy", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimDelcommand", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimEnddef", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimEndfunction", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimFor", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimHighlight", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimLet", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimLockvar", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimMap", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimMatch", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimNotFunc", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimNormal", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimSet", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimSleep", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimSyntax", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimThrow", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimUnlet", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimUnlockvar", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimUnmap", { link = "vimMap" })
vim.api.nvim_set_hl(0, "vimMenu", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vim9Abstract", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vim9Class", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vim9Const", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vim9Enum", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vim9Export", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vim9Final", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vim9For", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vim9Interface", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vim9Type", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vim9Var", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "@boolean", { link = "TSBoolean" })
vim.api.nvim_set_hl(0, "vimCount", { link = "Number" })
vim.api.nvim_set_hl(0, "Boolean", { fg = "#D19A66" })
vim.api.nvim_set_hl(0, "vimOper", { link = "Operator" })
vim.api.nvim_set_hl(0, "vim9Super", { link = "Identifier" })
vim.api.nvim_set_hl(0, "vim9This", { link = "Identifier" })
vim.api.nvim_set_hl(0, "Conditional", { fg = "#C678DD" })
vim.api.nvim_set_hl(0, "vimFBVar", { link = "vimVar" })
vim.api.nvim_set_hl(0, "vimVimVar", { link = "Identifier" })
vim.api.nvim_set_hl(0, "Include", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "vimEnvvar", { link = "PreProc" })
vim.api.nvim_set_hl(0, "vimLetRegister", { link = "Special" })
vim.api.nvim_set_hl(0, "Macro", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "vim9LhsRegister", { link = "vimLetRegister" })
vim.api.nvim_set_hl(0, "vimString", { link = "String" })
vim.api.nvim_set_hl(0, "vimBehaveError", { link = "vimError" })
vim.api.nvim_set_hl(0, "@number", { link = "TSNumber" })
vim.api.nvim_set_hl(0, "Number", { fg = "#D19A66" })
vim.api.nvim_set_hl(0, "vimFTCmd", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimFTOption", { link = "vimSynType" })
vim.api.nvim_set_hl(0, "vimSynType", { link = "vimSpecial" })
vim.api.nvim_set_hl(0, "PreProc", { fg = "#E5C07B" })
vim.api.nvim_set_hl(0, "@punctuation", { link = "Delimiter" })
vim.api.nvim_set_hl(0, "vimComment", { link = "Comment" })
vim.api.nvim_set_hl(0, "@punctuation.bracket", { link = "TSPunctBracket" })
vim.api.nvim_set_hl(0, "@punctuation.delimiter", { link = "TSPunctDelimiter" })
vim.api.nvim_set_hl(0, "@punctuation.special", { link = "TSPunctSpecial" })
vim.api.nvim_set_hl(0, "vimNotation", { link = "Special" })
vim.api.nvim_set_hl(0, "String", { fg = "#98C379" })
vim.api.nvim_set_hl(0, "vimContinue", { link = "Special" })
vim.api.nvim_set_hl(0, "Repeat", { fg = "#E5C07B" })
vim.api.nvim_set_hl(0, "@storageclass", { link = "StorageClass" })
vim.api.nvim_set_hl(0, "StorageClass", { fg = "#E5C07B" })
vim.api.nvim_set_hl(0, "@symbol", { link = "TSSymbol" })
vim.api.nvim_set_hl(0, "Identifier", { fg = "#ebe8e9" })
vim.api.nvim_set_hl(0, "@text", { link = "TSText" })
vim.api.nvim_set_hl(0, "@text.danger", { link = "DiagnosticError" })
vim.api.nvim_set_hl(0, "@text.diff.add", { link = "DiffAdd" })
vim.api.nvim_set_hl(0, "@text.diff.delete", { link = "DiffDelete" })
vim.api.nvim_set_hl(0, "@text.emphasis", { link = "TSEmphasis" })
vim.api.nvim_set_hl(0, "@text.environment", { link = "Macro" })
vim.api.nvim_set_hl(0, "@text.environment.name", { link = "Type" })
vim.api.nvim_set_hl(0, "Type", { fg = "#E5C07B" })
vim.api.nvim_set_hl(0, "@text.math", { link = "Number" })
vim.api.nvim_set_hl(0, "Special", { fg = "#56B6C2" })
vim.api.nvim_set_hl(0, "@text.note", { link = "Tag" })
vim.api.nvim_set_hl(0, "SpecialComment", { link = "Special" })
vim.api.nvim_set_hl(0, "@text.strike", { link = "TSStrike" })
vim.api.nvim_set_hl(0, "@text.strong", { link = "TSStrong" })
vim.api.nvim_set_hl(0, "@text.title", { link = "TSTitle" })
vim.api.nvim_set_hl(0, "Title", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "markdownH1", { link = "htmlH1" })
vim.api.nvim_set_hl(0, "markdownH1Delimiter", { link = "markdownHeadingDelimiter" })
vim.api.nvim_set_hl(0, "markdownH2", { link = "htmlH2" })
vim.api.nvim_set_hl(0, "markdownH2Delimiter", { link = "markdownHeadingDelimiter" })
vim.api.nvim_set_hl(0, "markdownH3", { link = "htmlH3" })
vim.api.nvim_set_hl(0, "markdownH3Delimiter", { link = "markdownHeadingDelimiter" })
vim.api.nvim_set_hl(0, "markdownH4", { link = "htmlH4" })
vim.api.nvim_set_hl(0, "markdownH4Delimiter", { link = "markdownHeadingDelimiter" })
vim.api.nvim_set_hl(0, "markdownH5", { link = "htmlH5" })
vim.api.nvim_set_hl(0, "markdownH5Delimiter", { link = "markdownHeadingDelimiter" })
vim.api.nvim_set_hl(0, "markdownH6", { link = "htmlH6" })
vim.api.nvim_set_hl(0, "markdownH6Delimiter", { link = "markdownHeadingDelimiter" })
vim.api.nvim_set_hl(0, "@text.underline", { link = "TSUnderline" })
vim.api.nvim_set_hl(0, "@text.uri", { link = "TSURI" })
vim.api.nvim_set_hl(0, "@text.warning", { link = "DiagnosticWarn" })
vim.api.nvim_set_hl(0, "Todo", { fg = "#E5C07B", bg = "#213554" })
vim.api.nvim_set_hl(0, "IndentBlanklineChar", { fg = "#1D3872" })
vim.api.nvim_set_hl(0, "ColorColumn", { bg = "#213554" })
vim.api.nvim_set_hl(0, "Conceal", { fg = "#01BFEF", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "CurSearch", { fg = "#07080D", bg = "#FCE094" })
vim.api.nvim_set_hl(0, "Cursor", { fg = "#121B2B", bg = "#ABB2BF" })
vim.api.nvim_set_hl(0, "CursorColumn", { bg = "#213554" })
vim.api.nvim_set_hl(0, "CursorLine", { bg = "#213554" })
vim.api.nvim_set_hl(0, "CursorLineNr", { fg = "#3AA3E9", bg = "#213554" })
vim.api.nvim_set_hl(0, "DiffAdd", { fg = "#98C379", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "DiffChange", { fg = "#80B2D6", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "DiffDelete", { fg = "#F04C75", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "DiffText", { fg = "#01BFEF", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "diffAdded", { fg = "#98C379", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "diffRemoved", { fg = "#F04C75", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "Directory", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "ErrorMsg", { fg = "#F04C75", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "FloatBorder", { fg = "#ABB2BF", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "FloatTitle", { link = "Title" })
vim.api.nvim_set_hl(0, "FoldColumn", { fg = "#56B6C2", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "markdownHeadingDelimiter", { link = "Delimiter" })
vim.api.nvim_set_hl(0, "yamlConstant", { link = "Constant" })
vim.api.nvim_set_hl(0, "yamlKeyValueDelimiter", { link = "Special" })
vim.api.nvim_set_hl(0, "yamlMappingMerge", { link = "Special" })
vim.api.nvim_set_hl(0, "yamlString", { link = "String" })
vim.api.nvim_set_hl(0, "yamlDirectiveName", { link = "Keyword" })
vim.api.nvim_set_hl(0, "yamlDocumentEnd", { link = "PreProc" })
vim.api.nvim_set_hl(0, "yamlDocumentStart", { link = "PreProc" })
vim.api.nvim_set_hl(0, "yamlBlockScalarHeader", { link = "Special" })
vim.api.nvim_set_hl(0, "yamlBlockCollectionItemStart", { link = "Label" })
vim.api.nvim_set_hl(0, "yamlBlockMappingKeyStart", { link = "yamlMappingKeyStart" })
vim.api.nvim_set_hl(0, "yamlBlockMappingMerge", { link = "yamlMappingMerge" })
vim.api.nvim_set_hl(0, "yamlBlockMappingDelimiter", { link = "yamlKeyValueDelimiter" })
vim.api.nvim_set_hl(0, "yamlAnchor", { link = "Type" })
vim.api.nvim_set_hl(0, "yamlNodeTag", { link = "Type" })
vim.api.nvim_set_hl(0, "yamlAlias", { link = "Type" })
vim.api.nvim_set_hl(0, "yamlInteger", { link = "Number" })
vim.api.nvim_set_hl(0, "yamlTimestamp", { link = "Number" })
vim.api.nvim_set_hl(0, "yamlFloat", { link = "Float" })
vim.api.nvim_set_hl(0, "yamlFlowMappingMerge", { link = "yamlMappingMerge" })
vim.api.nvim_set_hl(0, "yamlBool", { link = "yamlConstant" })
vim.api.nvim_set_hl(0, "yamlSingleEscape", { link = "SpecialChar" })
vim.api.nvim_set_hl(0, "yamlFlowMappingDelimiter", { link = "yamlKeyValueDelimiter" })
vim.api.nvim_set_hl(0, "yamlEscape", { link = "SpecialChar" })
vim.api.nvim_set_hl(0, "yamlFlowStringDelimiter", { link = "yamlString" })
vim.api.nvim_set_hl(0, "yamlYAMLVersion", { link = "Number" })
vim.api.nvim_set_hl(0, "yamlTagPrefix", { link = "String" })
vim.api.nvim_set_hl(0, "yamlTagHandle", { link = "String" })
vim.api.nvim_set_hl(0, "yamlReservedDirective", { link = "Error" })
vim.api.nvim_set_hl(0, "yamlYAMLDirective", { link = "yamlDirectiveName" })
vim.api.nvim_set_hl(0, "yamlTAGDirective", { link = "yamlDirectiveName" })
vim.api.nvim_set_hl(0, "yamlComment", { link = "Comment" })
vim.api.nvim_set_hl(0, "yamlTodo", { link = "Todo" })
vim.api.nvim_set_hl(0, "markdownFootnoteDefinition", { link = "Typedef" })
vim.api.nvim_set_hl(0, "markdownFootnote", { link = "Typedef" })
vim.api.nvim_set_hl(0, "markdownCodeDelimiter", { link = "Delimiter" })
vim.api.nvim_set_hl(0, "markdownStrike", { link = "htmlStrike" })
vim.api.nvim_set_hl(0, "markdownStrikeDelimiter", { link = "markdownStrike" })
vim.api.nvim_set_hl(0, "markdownBoldDelimiter", { link = "markdownBold" })
vim.api.nvim_set_hl(0, "markdownItalicDelimiter", { link = "markdownItalic" })
vim.api.nvim_set_hl(0, "markdownIdDelimiter", { link = "markdownLinkDelimiter" })
vim.api.nvim_set_hl(0, "markdownUrlTitleDelimiter", { link = "Delimiter" })
vim.api.nvim_set_hl(0, "markdownUrlDelimiter", { link = "htmlTag" })
vim.api.nvim_set_hl(0, "markdownUrlTitle", { link = "String" })
vim.api.nvim_set_hl(0, "markdownIdDeclaration", { link = "Typedef" })
vim.api.nvim_set_hl(0, "markdownUrl", { link = "Float" })
vim.api.nvim_set_hl(0, "markdownAutomaticLink", { link = "markdownUrl" })
vim.api.nvim_set_hl(0, "markdownHeadingRule", { link = "markdownRule" })
vim.api.nvim_set_hl(0, "markdownError", { link = "Error" })
vim.api.nvim_set_hl(0, "markdownEscape", { link = "Special" })
vim.api.nvim_set_hl(0, "markdownBold", { link = "htmlBold" })
vim.api.nvim_set_hl(0, "markdownItalic", { link = "htmlItalic" })
vim.api.nvim_set_hl(0, "markdownLinkText", { link = "htmlLink" })
vim.api.nvim_set_hl(0, "markdownRule", { link = "PreProc" })
vim.api.nvim_set_hl(0, "DiagnosticUnnecessary", { link = "Comment" })
vim.api.nvim_set_hl(0, "markdownOrderedListMarker", { link = "markdownListMarker" })
vim.api.nvim_set_hl(0, "htmlStatement", { link = "Statement" })
vim.api.nvim_set_hl(0, "TreesitterContext", { bg = "#213554" })
vim.api.nvim_set_hl(0, "htmlStyleArg", { link = "htmlString" })
vim.api.nvim_set_hl(0, "IlluminatedWordRead", {})
vim.api.nvim_set_hl(0, "IlluminatedWordText", {})
vim.api.nvim_set_hl(0, "IlluminatedWordWrite", {})
vim.api.nvim_set_hl(0, "cssUnicodeRange", { link = "Constant" })
vim.api.nvim_set_hl(0, "cssFontDescriptor", { link = "Special" })
vim.api.nvim_set_hl(0, "cssMediaComma", { link = "Normal" })
vim.api.nvim_set_hl(0, "cssPseudoClassLang", { link = "Constant" })
vim.api.nvim_set_hl(0, "cssRenderAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssTransformAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssSpeechAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssRubyAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssContentForPagedMediaProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssPagePseudo", { link = "PreProc" })
vim.api.nvim_set_hl(0, "cssAtRuleLogical", { link = "Statement" })
vim.api.nvim_set_hl(0, "cssAttrComma", { link = "Special" })
vim.api.nvim_set_hl(0, "cssHacks", { link = "Comment" })
vim.api.nvim_set_hl(0, "cssComment", { link = "Comment" })
vim.api.nvim_set_hl(0, "cssError", { link = "Error" })
vim.api.nvim_set_hl(0, "cssFontDescriptorAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssPageProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssPageMarginProp", { link = "cssAtKeyword" })
vim.api.nvim_set_hl(0, "cssMediaAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssMobileTextProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssAuralProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssIEUIAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "DapUISource", { fg = "#C678DD" })
vim.api.nvim_set_hl(0, "DapUILineNumber", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "DapUIFloatBorder", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "DapUIWatchesEmpty", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "DapUIWatchesValue", { fg = "#98C379" })
vim.api.nvim_set_hl(0, "DapUIWatchesError", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "DapUIBreakpointsPath", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "DapUIBreakpointsInfo", { fg = "#98C379" })
vim.api.nvim_set_hl(0, "DapUIBreakpointsCurrentLine", { fg = "#98C379" })
vim.api.nvim_set_hl(0, "DapUIBreakpointsDisabledLine", { fg = "#1D3872" })
vim.api.nvim_set_hl(0, "goPackage", { link = "Statement" })
vim.api.nvim_set_hl(0, "goImport", { link = "Statement" })
vim.api.nvim_set_hl(0, "goVar", { link = "Keyword" })
vim.api.nvim_set_hl(0, "goConst", { link = "Keyword" })
vim.api.nvim_set_hl(0, "goDeclaration", { link = "Keyword" })
vim.api.nvim_set_hl(0, "goStatement", { link = "Statement" })
vim.api.nvim_set_hl(0, "goConditional", { link = "Conditional" })
vim.api.nvim_set_hl(0, "htmlH6", { link = "htmlH5" })
vim.api.nvim_set_hl(0, "htmlH5", { link = "htmlH4" })
vim.api.nvim_set_hl(0, "htmlH4", { link = "htmlH3" })
vim.api.nvim_set_hl(0, "htmlH3", { link = "htmlH2" })
vim.api.nvim_set_hl(0, "htmlH2", { link = "htmlH1" })
vim.api.nvim_set_hl(0, "htmlH1", { link = "Title" })
vim.api.nvim_set_hl(0, "Underlined", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "NvimMod", { link = "NvimBinaryOperator" })
vim.api.nvim_set_hl(0, "Structure", { fg = "#C678DD" })
vim.api.nvim_set_hl(0, "Tag", { fg = "#E5C07B" })
vim.api.nvim_set_hl(0, "Removed", { fg = "#FFC0B9" })
vim.api.nvim_set_hl(0, "@lsp.type.property", { link = "@property" })
vim.api.nvim_set_hl(0, "@lsp.type.type", { link = "@type" })
vim.api.nvim_set_hl(0, "@lsp.type.variable", { link = "@variable" })
vim.api.nvim_set_hl(0, "NvimBinaryOperator", { link = "NvimOperator" })
vim.api.nvim_set_hl(0, "Bold", {})
vim.api.nvim_set_hl(0, "NvimComparison", { link = "NvimBinaryOperator" })
vim.api.nvim_set_hl(0, "NvimComparisonModifier", { link = "NvimComparison" })
vim.api.nvim_set_hl(0, "NvimBinaryPlus", { link = "NvimBinaryOperator" })
vim.api.nvim_set_hl(0, "NvimConcat", { link = "NvimBinaryOperator" })
vim.api.nvim_set_hl(0, "NvimConcatOrSubscript", { link = "NvimConcat" })
vim.api.nvim_set_hl(0, "NvimOr", { link = "NvimBinaryOperator" })
vim.api.nvim_set_hl(0, "NvimAnd", { link = "NvimBinaryOperator" })
vim.api.nvim_set_hl(0, "NvimMultiplication", { link = "NvimBinaryOperator" })
vim.api.nvim_set_hl(0, "NvimDivision", { link = "NvimBinaryOperator" })
vim.api.nvim_set_hl(0, "NvimTernary", { link = "NvimOperator" })
vim.api.nvim_set_hl(0, "NvimTernaryColon", { link = "NvimTernary" })
vim.api.nvim_set_hl(0, "NvimParenthesis", { link = "Delimiter" })
vim.api.nvim_set_hl(0, "NvimComma", { link = "Delimiter" })
vim.api.nvim_set_hl(0, "NvimIdentifierScopeDelimiter", { link = "NvimIdentifier" })
vim.api.nvim_set_hl(0, "NvimNestingParenthesis", { link = "NvimParenthesis" })
vim.api.nvim_set_hl(0, "NvimCallingParenthesis", { link = "NvimParenthesis" })
vim.api.nvim_set_hl(0, "NvimSubscript", { link = "NvimParenthesis" })
vim.api.nvim_set_hl(0, "NvimSubscriptBracket", { link = "NvimSubscript" })
vim.api.nvim_set_hl(0, "NvimCurly", { link = "NvimSubscript" })
vim.api.nvim_set_hl(0, "NvimContainer", { link = "NvimParenthesis" })
vim.api.nvim_set_hl(0, "NvimDict", { link = "NvimContainer" })
vim.api.nvim_set_hl(0, "NvimList", { link = "NvimContainer" })
vim.api.nvim_set_hl(0, "NvimIdentifier", { link = "Identifier" })
vim.api.nvim_set_hl(0, "NvimIdentifierScope", { link = "NvimIdentifier" })
vim.api.nvim_set_hl(0, "NvimIdentifierKey", { link = "NvimIdentifier" })
vim.api.nvim_set_hl(0, "NvimArrow", { link = "Delimiter" })
vim.api.nvim_set_hl(0, "NvimRegister", { link = "SpecialChar" })
vim.api.nvim_set_hl(0, "NvimStringQuote", { link = "NvimString" })
vim.api.nvim_set_hl(0, "DiagnosticVirtualLinesHint", { link = "DiagnosticHint" })
vim.api.nvim_set_hl(0, "DiagnosticVirtualLinesError", { link = "DiagnosticError" })
vim.api.nvim_set_hl(0, "DiagnosticVirtualLinesWarn", { link = "DiagnosticWarn" })
vim.api.nvim_set_hl(0, "DiagnosticVirtualLinesInfo", { link = "DiagnosticInfo" })
vim.api.nvim_set_hl(0, "NvimStringSpecial", { link = "SpecialChar" })
vim.api.nvim_set_hl(0, "NvimSingleQuote", { link = "NvimStringQuote" })
vim.api.nvim_set_hl(0, "NvimSingleQuotedBody", { link = "NvimStringBody" })
vim.api.nvim_set_hl(0, "NvimDoubleQuotedEscape", { link = "NvimStringSpecial" })
vim.api.nvim_set_hl(0, "NvimSingleQuotedUnknownEscape", { link = "NvimInternalError" })
vim.api.nvim_set_hl(0, "NvimSpacing", { link = "Normal" })
vim.api.nvim_set_hl(0, "NvimInvalidSingleQuotedUnknownEscape", { link = "NvimInternalError" })
vim.api.nvim_set_hl(0, "NvimInvalid", { link = "Error" })
vim.api.nvim_set_hl(0, "NvimInvalidAssignment", { link = "NvimInvalid" })
vim.api.nvim_set_hl(0, "NvimInvalidComparison", { link = "NvimInvalidBinaryOperator" })
vim.api.nvim_set_hl(0, "NvimInvalidBinaryPlus", { link = "NvimInvalidBinaryOperator" })
vim.api.nvim_set_hl(0, "NvimInvalidAnd", { link = "NvimInvalidBinaryOperator" })
vim.api.nvim_set_hl(0, "htmlTagName", { fg = "#FAC03B" })
vim.api.nvim_set_hl(0, "htmlArg", { fg = "#A3DB81" })
vim.api.nvim_set_hl(0, "htmlEndTag", { link = "htmlTagName" })
vim.api.nvim_set_hl(0, "htmlLink", { link = "Function" })
vim.api.nvim_set_hl(0, "htmlBold", { link = "Normal" })
vim.api.nvim_set_hl(0, "htmlItalic", { link = "Normal" })
vim.api.nvim_set_hl(0, "xmlEndTag", { link = "Statement" })
vim.api.nvim_set_hl(0, "asciidocQuotedEmphasized", { link = "PreProc" })
vim.api.nvim_set_hl(0, "diffBDiffer", { link = "WarningMsg" })
vim.api.nvim_set_hl(0, "diffDiffer", { link = "WarningMsg" })
vim.api.nvim_set_hl(0, "diffOnly", { link = "WarningMsg" })
vim.api.nvim_set_hl(0, "ConId", { link = "Type" })
vim.api.nvim_set_hl(0, "yamlBlockMappingKey", { link = "Statement" })
vim.api.nvim_set_hl(0, "FzfLuaNormal", { link = "Normal" })
vim.api.nvim_set_hl(0, "FzfLuaTitle", { link = "FzfLuaNormal" })
vim.api.nvim_set_hl(0, "@variable.member", { link = "@field" })
vim.api.nvim_set_hl(0, "vimTodo", { link = "Todo" })
vim.api.nvim_set_hl(0, "vimCommand", { link = "Statement" })
vim.api.nvim_set_hl(0, "vimOption", { link = "PreProc" })
vim.api.nvim_set_hl(0, "vimSetMod", { link = "vimOption" })
vim.api.nvim_set_hl(0, "vimErrSetting", { link = "vimError" })
vim.api.nvim_set_hl(0, "vimHLGroup", { link = "vimGroup" })
vim.api.nvim_set_hl(0, "vimFunc", { link = "vimError" })
vim.api.nvim_set_hl(0, "vimBang", { link = "vimOper" })
vim.api.nvim_set_hl(0, "vimVar", { link = "Normal" })
vim.api.nvim_set_hl(0, "vimOptionVar", { link = "Identifier" })
vim.api.nvim_set_hl(0, "vim9LhsVariable", { link = "vimVar" })
vim.api.nvim_set_hl(0, "vimBehaveBang", { link = "vimBang" })
vim.api.nvim_set_hl(0, "vimBehaveModel", { link = "vimBehave" })
vim.api.nvim_set_hl(0, "vimFTError", { link = "vimError" })
vim.api.nvim_set_hl(0, "vimLineComment", { link = "vimComment" })
vim.api.nvim_set_hl(0, "vimSpecFile", { link = "Identifier" })
vim.api.nvim_set_hl(0, "vimRegister", { link = "SpecialChar" })
vim.api.nvim_set_hl(0, "vimCmplxRepeat", { link = "SpecialChar" })
vim.api.nvim_set_hl(0, "Italic", {})
vim.api.nvim_set_hl(0, "vimCtrlChar", { link = "SpecialChar" })
vim.api.nvim_set_hl(0, "vimAugroupKey", { link = "vimCommand" })
vim.api.nvim_set_hl(0, "vimError", { link = "Error" })
vim.api.nvim_set_hl(0, "TooLong", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "DiffFile", { fg = "#F04C75", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "goFunction", { link = "Function" })
vim.api.nvim_set_hl(0, "goCharacter", { link = "Character" })
vim.api.nvim_set_hl(0, "goFormatSpecifier", { link = "goSpecialString" })
vim.api.nvim_set_hl(0, "goImportString", { link = "String" })
vim.api.nvim_set_hl(0, "goRawString", { link = "String" })
vim.api.nvim_set_hl(0, "goString", { link = "String" })
vim.api.nvim_set_hl(0, "goSpecialString", { link = "Special" })
vim.api.nvim_set_hl(0, "goEscapeError", { link = "Error" })
vim.api.nvim_set_hl(0, "goEscapeBigU", { link = "goSpecialString" })
vim.api.nvim_set_hl(0, "goEscapeU", { link = "goSpecialString" })
vim.api.nvim_set_hl(0, "goEscapeX", { link = "goSpecialString" })
vim.api.nvim_set_hl(0, "goEscapeC", { link = "goSpecialString" })
vim.api.nvim_set_hl(0, "goEscapeOctal", { link = "goSpecialString" })
vim.api.nvim_set_hl(0, "goComment", { link = "Comment" })
vim.api.nvim_set_hl(0, "goTodo", { link = "Todo" })
vim.api.nvim_set_hl(0, "goPredefinedIdentifiers", { link = "Constant" })
vim.api.nvim_set_hl(0, "goBoolean", { link = "Boolean" })
vim.api.nvim_set_hl(0, "goBuiltins", { link = "Identifier" })
vim.api.nvim_set_hl(0, "goComplexes", { link = "Type" })
vim.api.nvim_set_hl(0, "goFloats", { link = "Type" })
vim.api.nvim_set_hl(0, "goUnsignedInts", { link = "Type" })
vim.api.nvim_set_hl(0, "goSignedInts", { link = "Type" })
vim.api.nvim_set_hl(0, "goType", { link = "Type" })
vim.api.nvim_set_hl(0, "goRepeat", { link = "Repeat" })
vim.api.nvim_set_hl(0, "goLabel", { link = "Label" })
vim.api.nvim_set_hl(0, "cssFontProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssFontAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssMultiColumnProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssMultiColumnAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssInteractProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssInteractAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssGeneratedContentProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssGeneratedContentAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssGridProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssHyerlinkProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssListProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssListAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssObjectProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssObjectAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssPositioningProp", { link = "cssProp" })
vim.api.nvim_set_hl(0, "cssPositioningAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "cssPrintAttr", { link = "cssAttr" })
vim.api.nvim_set_hl(0, "DapUIFrameName", { link = "Normal" })
vim.api.nvim_set_hl(0, "DapUIStoppedThread", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "DapUIThread", { fg = "#98C379" })
vim.api.nvim_set_hl(0, "DapUIDecoration", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "DapUIModifiedValue", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "DapUIValue", { link = "Normal" })
vim.api.nvim_set_hl(0, "DapUIType", { fg = "#C678DD" })
vim.api.nvim_set_hl(0, "DapUIScope", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "DapUIVariable", { link = "Normal" })
vim.api.nvim_set_hl(0, "MiniCompletionActiveParameter", { link = "CursorLine" })
vim.api.nvim_set_hl(0, "@typeParameter", { link = "Type" })
vim.api.nvim_set_hl(0, "@regexp", { link = "TSStringRegex" })
vim.api.nvim_set_hl(0, "@modifier", { link = "Identifier" })
vim.api.nvim_set_hl(0, "@interface", { link = "Structure" })
vim.api.nvim_set_hl(0, "@event", { link = "Identifier" })
vim.api.nvim_set_hl(0, "@enumMember", { link = "Constant" })
vim.api.nvim_set_hl(0, "@class", { link = "TSType" })
vim.api.nvim_set_hl(0, "CmpItemKindOperator", { fg = "#ABB2BF" })
vim.api.nvim_set_hl(0, "CmpItemKindField", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "CmpItemKindProperty", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "CmpItemKindModule", { fg = "#ABB2BF" })
vim.api.nvim_set_hl(0, "CmpItemKindUnit", { fg = "#E5C07B" })
vim.api.nvim_set_hl(0, "CmpItemKindEnum", { fg = "#E5C07B" })
vim.api.nvim_set_hl(0, "CmpItemKindEvent", { fg = "#E5C07B" })
vim.api.nvim_set_hl(0, "NotifyTRACEBody", { link = "Normal" })
vim.api.nvim_set_hl(0, "NotifyDEBUGBody", { link = "Normal" })
vim.api.nvim_set_hl(0, "NotifyINFOBody", { link = "Normal" })
vim.api.nvim_set_hl(0, "NotifyWARNBody", { link = "Normal" })
vim.api.nvim_set_hl(0, "NotifyERRORBody", { link = "Normal" })
vim.api.nvim_set_hl(0, "NotifyTRACETitle", { fg = "#56B6C2" })
vim.api.nvim_set_hl(0, "NotifyDEBUGTitle", { fg = "#56B6C2" })
vim.api.nvim_set_hl(0, "NotifyINFOTitle", { fg = "#ABB2BF" })
vim.api.nvim_set_hl(0, "NotifyWARNTitle", { fg = "#C678DD" })
vim.api.nvim_set_hl(0, "NotifyERRORTitle", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "NotifyTRACEIcon", { fg = "#56B6C2" })
vim.api.nvim_set_hl(0, "NotifyDEBUGIcon", { fg = "#56B6C2" })
vim.api.nvim_set_hl(0, "NotifyINFOIcon", { fg = "#ABB2BF" })
vim.api.nvim_set_hl(0, "NotifyWARNIcon", { fg = "#C678DD" })
vim.api.nvim_set_hl(0, "NotifyERRORIcon", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "NotifyTRACEBorder", { fg = "#56B6C2" })
vim.api.nvim_set_hl(0, "NotifyDEBUGBorder", { fg = "#56B6C2" })
vim.api.nvim_set_hl(0, "NotifyINFOBorder", { fg = "#ABB2BF" })
vim.api.nvim_set_hl(0, "NotifyWARNBorder", { fg = "#C678DD" })
vim.api.nvim_set_hl(0, "NotifyERRORBorder", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "TelescopePromptTitle", { fg = "#1D2F4B", bg = "#F04C75" })
vim.api.nvim_set_hl(0, "@markup.link.url", { link = "@text.uri" })
vim.api.nvim_set_hl(0, "@string.special.symbol", { link = "@symbol" })
vim.api.nvim_set_hl(0, "@keyword.repeat", { link = "@repeat" })
vim.api.nvim_set_hl(0, "@keyword.import", { link = "@include" })
vim.api.nvim_set_hl(0, "@keyword.exception", { link = "@exception" })
vim.api.nvim_set_hl(0, "@keyword.debug", { link = "@debug" })
vim.api.nvim_set_hl(0, "@keyword.conditional", { link = "@conditional" })
vim.api.nvim_set_hl(0, "@keyword.storage", { link = "@storageclass" })
vim.api.nvim_set_hl(0, "@keyword.directive.define", { link = "@define" })
vim.api.nvim_set_hl(0, "@keyword.directive", { link = "@preproc" })
vim.api.nvim_set_hl(0, "@comment.info", { link = "DiagnosticInfo" })
vim.api.nvim_set_hl(0, "@comment.hint", { link = "DiagnosticHint" })
vim.api.nvim_set_hl(0, "@function.method.call", { link = "@method.call" })
vim.api.nvim_set_hl(0, "@namespace", { link = "TSNamespace" })
vim.api.nvim_set_hl(0, "@field", { link = "TSField" })
vim.api.nvim_set_hl(0, "@include", { link = "TSInclude" })
vim.api.nvim_set_hl(0, "@repeat", { link = "TSRepeat" })
vim.api.nvim_set_hl(0, "@conditional", { link = "TSConditional" })
vim.api.nvim_set_hl(0, "@keyword.return", { link = "TSKeyword" })
vim.api.nvim_set_hl(0, "@keyword.operator", { link = "TSKeywordOperator" })
vim.api.nvim_set_hl(0, "@parameter", { link = "TSParameter" })
vim.api.nvim_set_hl(0, "@method", { link = "TSMethod" })
vim.api.nvim_set_hl(0, "@function.macro", { link = "TSFuncMacro" })
vim.api.nvim_set_hl(0, "@float", { link = "TSFloat" })
vim.api.nvim_set_hl(0, "@preproc", { link = "PreProc" })
vim.api.nvim_set_hl(0, "TSFuncBuiltin", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "TSFunction", { fg = "#01BFEF" })
vim.api.nvim_set_hl(0, "TSFloat", { fg = "#D19A66" })
vim.api.nvim_set_hl(0, "TSField", { fg = "#ABB2BF" })
vim.api.nvim_set_hl(0, "TSException", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "TSError", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "TSConstMacro", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "TSConstBuiltin", { fg = "#D19A66" })
vim.api.nvim_set_hl(0, "TSConstant", { fg = "#D19A66" })
vim.api.nvim_set_hl(0, "TSConditional", { fg = "#C678DD" })
vim.api.nvim_set_hl(0, "gitcommitComment", { fg = "#80B2D6" })
vim.api.nvim_set_hl(0, "gitcommitSummary", { fg = "#98C379" })
vim.api.nvim_set_hl(0, "gitcommitOverflow", { fg = "#F04C75" })
vim.api.nvim_set_hl(0, "DiffLine", { fg = "#01BFEF", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "DiffNewFile", { fg = "#98C379", bg = "#121B2B" })
vim.api.nvim_set_hl(0, "goTypeName", { link = "Type" })
vim.api.nvim_set_hl(0, "goDecimalInt", { link = "Integer" })
vim.api.nvim_set_hl(0, "Integer", { link = "Number" })
vim.api.nvim_set_hl(0, "goHexadecimalInt", { link = "Integer" })
vim.api.nvim_set_hl(0, "goOctalInt", { link = "Integer" })
vim.api.nvim_set_hl(0, "goBinaryInt", { link = "Integer" })
vim.api.nvim_set_hl(0, "goDecimalError", { link = "Error" })
vim.api.nvim_set_hl(0, "goHexadecimalError", { link = "Error" })
vim.api.nvim_set_hl(0, "goOctalError", { link = "Error" })
vim.api.nvim_set_hl(0, "goBinaryError", { link = "Error" })
vim.api.nvim_set_hl(0, "goFloat", { link = "Float" })
vim.api.nvim_set_hl(0, "goHexadecimalFloat", { link = "Float" })
vim.api.nvim_set_hl(0, "goImaginaryDecimal", { link = "Number" })
vim.api.nvim_set_hl(0, "goImaginaryHexadecimal", { link = "Number" })
vim.api.nvim_set_hl(0, "goImaginaryOctal", { link = "Number" })
vim.api.nvim_set_hl(0, "goImaginaryBinary", { link = "Number" })
vim.api.nvim_set_hl(0, "goImaginaryFloat", { link = "Float" })
vim.api.nvim_set_hl(0, "goImaginaryHexadecimalFloat", { link = "Float" })
vim.api.nvim_set_hl(0, "goExtraType", { link = "Type" })
vim.api.nvim_set_hl(0, "goSpaceError", { link = "Error" })
vim.api.nvim_set_hl(0, "goOperator", { link = "Operator" })
vim.api.nvim_set_hl(0, "goDeclType", { link = "Keyword" })
vim.api.nvim_set_hl(0, "goFunctionCall", { link = "Type" })
vim.api.nvim_set_hl(0, "goField", { link = "Identifier" })
vim.api.nvim_set_hl(0, "goTypeConstructor", { link = "Type" })
vim.api.nvim_set_hl(0, "goTypeDecl", { link = "Keyword" })
vim.api.nvim_set_hl(0, "goPackageComment", { link = "Comment" })
vim.api.nvim_set_hl(0, "goCoverageNormalText", { link = "Comment" })
vim.api.nvim_set_hl(0, "xmlError", { link = "Error" })
vim.api.nvim_set_hl(0, "xmlEntity", { link = "Statement" })
vim.api.nvim_set_hl(0, "xmlString", { link = "String" })
vim.api.nvim_set_hl(0, "xmlAttribPunct", { link = "Comment" })
vim.api.nvim_set_hl(0, "xmlAttrib", { link = "Type" })
vim.api.nvim_set_hl(0, "xmlNamespace", { link = "Tag" })
vim.api.nvim_set_hl(0, "xmlCdata", { link = "String" })
vim.api.nvim_set_hl(0, "xmlComment", { link = "Comment" })
vim.api.nvim_set_hl(0, "xmlProcessing", { link = "Type" })
vim.api.nvim_set_hl(0, "xmlEntityPunct", { link = "Type" })
vim.api.nvim_set_hl(0, "xmlCommentStart", { link = "xmlComment" })
vim.api.nvim_set_hl(0, "xmlCommentError", { link = "Error" })
vim.api.nvim_set_hl(0, "xmlCommentPart", { link = "Comment" })
vim.api.nvim_set_hl(0, "xmlTodo", { link = "Todo" })
vim.api.nvim_set_hl(0, "xmlCdataStart", { link = "Type" })
vim.api.nvim_set_hl(0, "xmlCdataEnd", { link = "Type" })
vim.api.nvim_set_hl(0, "xmlCdataCdata", { link = "Statement" })
vim.api.nvim_set_hl(0, "xmlProcessingDelim", { link = "Comment" })
vim.api.nvim_set_hl(0, "xmlDocTypeKeyword", { link = "Statement" })
vim.api.nvim_set_hl(0, "xmlInlineDTD", { link = "Function" })
vim.api.nvim_set_hl(0, "xmlDocTypeDecl", { link = "Function" })
vim.api.nvim_set_hl(0, "dtdFunction", { link = "Function" })
vim.api.nvim_set_hl(0, "dtdTag", { link = "Normal" })
vim.api.nvim_set_hl(0, "dtdTagName", { link = "Statement" })
vim.api.nvim_set_hl(0, "dtdError", { link = "Error" })
vim.api.nvim_set_hl(0, "dtdComment", { link = "Comment" })
vim.api.nvim_set_hl(0, "dtdString", { link = "dtdConstant" })
vim.api.nvim_set_hl(0, "dtdConstant", { link = "Constant" })
vim.api.nvim_set_hl(0, "dtdAttrType", { link = "dtdType" })
vim.api.nvim_set_hl(0, "dtdType", { link = "Type" })
vim.api.nvim_set_hl(0, "dtdAttrDef", { link = "dtdType" })
vim.api.nvim_set_hl(0, "dtdEnum", { link = "dtdConstant" })
vim.api.nvim_set_hl(0, "dtdParamEntityInst", { link = "dtdConstant" })
vim.api.nvim_set_hl(0, "dtdParamEntityDecl", { link = "dtdType" })
vim.api.nvim_set_hl(0, "dtdCard", { link = "dtdFunction" })
vim.api.nvim_set_hl(0, "dtdTodo", { link = "Todo" })
vim.api.nvim_set_hl(0, "dtdParamEntityPunct", { link = "dtdType" })
vim.api.nvim_set_hl(0, "dtdParamEntityDPunct", { link = "dtdComment" })
vim.api.nvim_set_hl(0, "dtdEntityPunct", { link = "dtdType" })
vim.api.nvim_set_hl(0, "dtdEntity", { link = "Statement" })
vim.api.nvim_set_hl(0, "htmlError", { link = "Error" })
vim.api.nvim_set_hl(0, "htmlSpecialChar", { link = "Special" })
vim.api.nvim_set_hl(0, "javaScriptExpression", { link = "javaScript" })
vim.api.nvim_set_hl(0, "javaScript", { link = "Special" })
vim.api.nvim_set_hl(0, "htmlString", { link = "String" })
vim.api.nvim_set_hl(0, "htmlValue", { link = "String" })
vim.api.nvim_set_hl(0, "htmlTagError", { link = "htmlError" })
vim.api.nvim_set_hl(0, "htmlEvent", { link = "javaScript" })
vim.api.nvim_set_hl(0, "htmlCssDefinition", { link = "Special" })
vim.api.nvim_set_hl(0, "htmlMathTagName", { link = "htmlTagName" })
vim.api.nvim_set_hl(0, "htmlSvgTagName", { link = "htmlTagName" })
vim.api.nvim_set_hl(0, "htmlCommentError", { link = "htmlError" })
vim.api.nvim_set_hl(0, "htmlComment", { link = "Comment" })
vim.api.nvim_set_hl(0, "htmlCommentNested", { link = "htmlError" })
vim.api.nvim_set_hl(0, "htmlPreStmt", { link = "PreProc" })
vim.api.nvim_set_hl(0, "htmlPreError", { link = "Error" })
vim.api.nvim_set_hl(0, "htmlPreAttr", { link = "String" })
vim.api.nvim_set_hl(0, "htmlPreProc", { link = "PreProc" })
vim.api.nvim_set_hl(0, "htmlPreProcAttrError", { link = "Error" })
vim.api.nvim_set_hl(0, "htmlPreProcAttrName", { link = "PreProc" })
vim.api.nvim_set_hl(0, "htmlStrike", {})
